{"version":3,"file":"Wes-7780f310.js","sources":["../../src/view/Wes.vue"],"sourcesContent":["<script>\r\nimport { useSlots, onBeforeMount, onMounted, onBeforeUnmount, ref, reactive, computed, watch, nextTick, defineAsyncComponent, useCssModule, inject, getCurrentInstance } from 'vue'\r\nimport $ from 'jquery'\r\n\r\nimport { Map, View, Feature } from 'ol'\r\nimport { ImageArcGISRest, OSM } from 'ol/source.js'\r\nimport TileWMS from 'ol/source/TileWMS'\r\nimport Overlay from 'ol/Overlay'// 引入覆蓋物模塊\r\n\r\nimport { TileArcGISRest } from 'ol/source.js'\r\n\r\nimport XYZ from 'ol/source/XYZ'\r\nimport VectorSource from 'ol/source/Vector.js'\r\nimport { Icon, Fill, Stroke, Style } from 'ol/style.js'\r\nimport { Tile, Tile as TileLayer, Image as ImageLayer, Vector, Vector as VectorLayer } from 'ol/layer.js'\r\nimport ImageWMS from 'ol/source/ImageWMS.js';\r\nimport TileGrid from 'ol/layer/Tile.js';\r\n\r\nimport PerspectiveMap from \"ol-ext/map/PerspectiveMap\"\r\n\r\nimport EsriJSON from 'ol/format/EsriJSON.js'\r\nimport { createXYZ } from 'ol/tilegrid.js'\r\nimport { tile as tileStrategy } from 'ol/loadingstrategy.js'\r\nimport { Circle, Polygon, Point } from 'ol/geom.js'\r\nimport Projection from 'ol/proj/Projection.js'\r\nimport GeoJSON from 'ol/format/GeoJSON.js'\r\n\r\nimport OLCesium from 'olcs/OLCesium.js';\r\nimport VectorImageLayer from 'ol/layer/VectorImage.js';\r\nimport TileState from 'ol/TileState.js';\r\n\r\nimport 'ol/ol.css'\r\n\r\nimport mapLayerList, { initLayers, tribeIdList, getTribeData } from '@/config/mapLayerList'\r\nimport baseMapList from '@/config/baseMapList'\r\n\r\nimport 'ol-ext/dist/ol-ext.css'\r\n\r\nimport { get as getProjection } from 'ol/proj';\r\n\r\nexport default {\r\n    props: {},\r\n    setup(props, { emit }) {\r\n\r\n        const state = reactive({\r\n            map1: null,\r\n            map2: null,\r\n            defaultCenter: [121.326776, 24.655499],\r\n            defaultCenterZoom: 14,\r\n        })\r\n        const defaultView = new View({\r\n            projection: 'EPSG:4326',\r\n            center: state.defaultCenter,\r\n            zoom: state.defaultCenterZoom,\r\n        })\r\n        const osm = new TileLayer({\r\n            source: new OSM(),\r\n        })\r\n\r\n\r\n        // 監聽地圖點擊事件\r\n        // target.on('click', (evt) => {\r\n        //     const feature = state.map1.forEachLayerAtPixel(evt.pixel, function (feature, layer) {\r\n        //         return feature\r\n        //     })\r\n        //     if (feature) {\r\n        //         // const coordinate = evt.coordinate\r\n        //         // state.areaDataId = feature.get('name')\r\n        //         // overlay.value.setPosition(coordinate)\r\n        //     }\r\n        // })\r\n        // let newTileLayer = mapLayers[value.layerName]()\r\n        // if (Array.isArray(newTileLayer)) {\r\n        //     newTileLayer.forEach(node=>{\r\n        //         target.addLayer(node)\r\n        //     })\r\n        //     // 點擊事件\r\n        //     target.on('click', function (evt) {\r\n        //         const feature =target.forEachFeatureAtPixel(evt.pixel, function (feature, layer) {\r\n        //             return feature\r\n        //         })\r\n        //         if (feature) {\r\n        //             const coordinate = evt.coordinate\r\n        //             state.areaDataId = feature.get('name')\r\n        //             overlay.value.setPosition(coordinate)\r\n        //         } else {\r\n        //             overlay.value.setPosition(undefined)\r\n        //         }\r\n        //     })\r\n        //     target.addOverlay(overlay.value)\r\n        // } else {\r\n        //     target.addLayer(newTileLayer)\r\n        // }\r\n\r\n        // 點擊事件\r\n        // forEachFeatureAtPixel\r\n        // forEachLayerAtPixel\r\n        // forEachFeatureAtPixel\r\n\r\n        onMounted(async () => {\r\n            const circleFeature = new Feature({\r\n                    name: 'DimensionMap',\r\n                    title: 'DimensionMap',\r\n                    geometry: new Circle([121.326776, 24.655499], 0.005),\r\n            })\r\n            const coordinates = [\r\n                [120.971859, 24.801583],\r\n                [120.970000, 24.809583],\r\n                [120.985000, 24.808583],\r\n                [120.990000, 24.806583],\r\n                [120.971859, 24.801583]\r\n            ]\r\n\r\n            const areaLineLayer = new Vector({\r\n                name: 'DimensionMap',\r\n                title: 'DimensionMap',\r\n                source: new VectorSource({\r\n                    features: [new Feature({\r\n                        name: 'areaLineLayer',\r\n                        title: 'areaLineLayer',\r\n                        geometry: new Circle([121.326776, 24.655499], 0.005),\r\n                    })],\r\n                }),\r\n                style: new Style({\r\n                    fill: new Fill({\r\n                        color: '#0f9ce2'\r\n                    }),\r\n                })\r\n            })\r\n            let a = '%E6%96%B0%E7%AB%B9%E7%B8%A3%E5%8E%9F%E4%BD%8F%E6%B0%91%E9%83%A8%E8%90%BD%E7%AF%84%E5%9C%8D'\r\n            let b = window.encodeURI('新竹縣原住民部落範圍')\r\n            // LAYER=\r\n            // %E6%96%B0%E7%AB%B9%E7%B8%A3%E5%8E%9F%E4%BD%8F%E6%B0%91%E9%83%A8%E8%90%BD%E7%AF%84%E5%9C%8D\r\n            // &REQUEST=GetMap&SERVICE=WMS&BGCOLOR=0xFFFFFF&TRANSPARENT=TRUE&SRS=EPSG:3826&VERSION=1.1.1&FORMAT=image/png&STYLES=\",\r\n            console.log(a === b)\r\n            // http://gis.edtest.site:8010/ogc/temp?LAYER=新竹縣原住民部落範圍&REQUEST=GetMap&SERVICE=WMS&BGCOLOR=0xFFFFFF&TRANSPARENT=TRUE&SRS=EPSG:3826&VERSION=1.3.0&FORMAT=image/png&STYLES=\r\n            const wmsSource = new TileWMS({\r\n                url: 'http://gis.edtest.site:8010/ogc/temp',\r\n                params: {\r\n                    'LAYER': '新竹縣原住民部落範圍',\r\n                    // 'LAYER': '%E6%96%B0%E7%AB%B9%E7%B8%A3%E5%8E%9F%E4%BD%8F%E6%B0%91%E9%83%A8%E8%90%BD%E7%AF%84%E5%9C%8D',\r\n                    'REQUEST': 'GetMap',\r\n                    'SERVICE': 'WMS',\r\n                    'BGCOLOR': '0xFFFFFF',\r\n                    'TRANSPARENT': 'TRUE',\r\n                    'SRS': 'EPSG:4326',\r\n                    'VERSION': '1.3',\r\n                    'FORMAT': 'image/png',\r\n                    'STYLES': '',\r\n                },\r\n                serverType: 'geoserver'\r\n            })\r\n\r\n            const braster = new TileLayer ({\r\n                source: wmsSource\r\n            })\r\n\r\n            const cwmsSource = new TileWMS({\r\n                url: 'https://dwgis1.ncdr.nat.gov.tw/server/services/MAP0627/Map2022FloodingPoint1721/MapServer/WMSServer',\r\n                params: {\r\n                    'REQUEST': 'GetMap',\r\n                    'SERVICE': 'WMS',\r\n                    'BGCOLOR': '0xFFFFFF',\r\n                    'TRANSPARENT': 'TRUE',\r\n                    'SRS': 'EPSG:3826',\r\n                    'LAYERS': '0',\r\n                    'VERSION': '1.1.1',\r\n                    'FORMAT': 'image/png',\r\n                    'STYLES': '',\r\n                },\r\n                serverType: 'geoserver'\r\n            })\r\n\r\n            const craster = new TileLayer ({\r\n                source: cwmsSource\r\n            })\r\n\r\n            state.map1 = new Map({\r\n                target: 'map1',\r\n                layers: [baseMapList.sourceFun('default'), areaLineLayer, craster ,braster],\r\n                view: defaultView,\r\n                controls: [],\r\n            })\r\n        })\r\n\r\n        function showLayer() {\r\n            console.log(state.map1.getLayers().getArray())\r\n        }\r\n\r\n        return {\r\n            state,\r\n            showLayer\r\n            // map\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n\r\n<template>\r\n    000\r\n    <div @click=\"showLayer\">show</div>\r\n    <div id=\"map1\" class=\"map\"></div>\r\n    8999\r\n\r\n</template>\r\n\r\n<style>\r\n.map {\r\n    width: 800px;\r\n    height: 800px;\r\n}\r\n</style>\r\n"],"names":["_sfc_main","props","emit","state","reactive","OSM","onMounted","Feature","Style","b","a","wmsSource","cwmsSource","Map","baseMapList","areaLineLayer","craster","braster","defaultView","showLayer","_createTextVNode","_cache","args","$setup"],"mappings":"iNAwCA,MAAAA,EAAA,CACI,MAAA,CAAA,EACA,MAAAC,EAAA,CAAA,KAAAC,GAAA,CAEI,MAAAC,EAAAC,EAAA,CACI,KAAA,KACA,KAAA,KACA,cAAA,CAAA,WAAA,SAAA,EACA,kBAAA,8FAQA,OAAA,IAAAC,IA2CJC,EAAA,SAAA,CACI,IAAAC,EAAA,CACQ,KAAA,eACA,MAAA,4EAYJ,KAAA,eACA,MAAA,6BAEI,SAAA,CAAA,IAAAA,EAAA,CACI,KAAA,gBACA,MAAA,2DAEJ,CAAA,CAAA,CACJ,CAAA,EACA,MAAA,IAAAC,EAAA,aAEQ,MAAA,SACJ,CAAA,yGAIRC,EAAA,OAAA,UAAA,YAAA,EAIA,QAAA,IAAAC,IAAAD,CAAA,iBAGI,IAAA,uCACA,OAAA,CACI,MAAA,aAEA,QAAA,SACA,QAAA,MACA,QAAA,WACA,YAAA,OACA,IAAA,YACA,QAAA,MACA,OAAA,uBAGJ,WAAA,uBAIA,OAAAE,uHAKA,OAAA,CACI,QAAA,SACA,QAAA,MACA,QAAA,WACA,YAAA,OACA,IAAA,uBAEA,QAAA,QACA,OAAA,uBAGJ,WAAA,uBAIA,OAAAC,IAGJT,EAAA,KAAA,IAAAU,EAAA,eAEI,OAAA,CAAAC,EAAA,UAAA,SAAA,EAAAC,EAAAC,EAAAC,CAAA,EACA,KAAAC,kBAKR,SAAAC,GAAA,CACI,QAAA,IAAAhB,EAAA,KAAA,UAAA,EAAA,UAAA,CACJ,CAEA,MAAA,SAEI,UAAAgB,CAEJ,CACJ,CACJ,aAQS,GAAA,OAAU,MAAA,6DADfC,EAAA,OAAA,WAAM,QAAAC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,IAAAC,IAAAC,EAAA,WAAAA,EAAA,UAAA,GAAAD,CAAA,cAC2BF,EAAA,QAAA"}