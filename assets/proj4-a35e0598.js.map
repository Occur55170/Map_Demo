{"version":3,"file":"proj4-a35e0598.js","sources":["../../node_modules/ol/string.js","../../node_modules/ol/uri.js","../../node_modules/ol/source/wms.js","../../node_modules/ol/layer/BaseImage.js","../../node_modules/ol/renderer/canvas/ImageLayer.js","../../node_modules/ol/layer/Image.js","../../node_modules/ol/source/TileWMS.js","../../node_modules/proj4/lib/global.js","../../node_modules/proj4/lib/constants/values.js","../../node_modules/proj4/lib/constants/PrimeMeridian.js","../../node_modules/proj4/lib/constants/units.js","../../node_modules/proj4/lib/match.js","../../node_modules/proj4/lib/projString.js","../../node_modules/wkt-parser/parser.js","../../node_modules/wkt-parser/process.js","../../node_modules/wkt-parser/index.js","../../node_modules/proj4/lib/defs.js","../../node_modules/proj4/lib/parseCode.js","../../node_modules/proj4/lib/extend.js","../../node_modules/proj4/lib/common/msfnz.js","../../node_modules/proj4/lib/common/sign.js","../../node_modules/proj4/lib/common/adjust_lon.js","../../node_modules/proj4/lib/common/tsfnz.js","../../node_modules/proj4/lib/common/phi2z.js","../../node_modules/proj4/lib/projections/merc.js","../../node_modules/proj4/lib/projections/longlat.js","../../node_modules/proj4/lib/projections.js","../../node_modules/proj4/lib/constants/Ellipsoid.js","../../node_modules/proj4/lib/deriveConstants.js","../../node_modules/proj4/lib/constants/Datum.js","../../node_modules/proj4/lib/datum.js","../../node_modules/proj4/lib/nadgrid.js","../../node_modules/proj4/lib/Proj.js","../../node_modules/proj4/lib/datumUtils.js","../../node_modules/proj4/lib/datum_transform.js","../../node_modules/proj4/lib/adjust_axis.js","../../node_modules/proj4/lib/common/toPoint.js","../../node_modules/proj4/lib/checkSanity.js","../../node_modules/proj4/lib/transform.js","../../node_modules/proj4/lib/core.js","../../node_modules/mgrs/mgrs.js","../../node_modules/proj4/lib/Point.js","../../node_modules/proj4/lib/common/pj_enfn.js","../../node_modules/proj4/lib/common/pj_mlfn.js","../../node_modules/proj4/lib/common/pj_inv_mlfn.js","../../node_modules/proj4/lib/projections/tmerc.js","../../node_modules/proj4/lib/common/sinh.js","../../node_modules/proj4/lib/common/hypot.js","../../node_modules/proj4/lib/common/log1py.js","../../node_modules/proj4/lib/common/asinhy.js","../../node_modules/proj4/lib/common/gatg.js","../../node_modules/proj4/lib/common/clens.js","../../node_modules/proj4/lib/common/cosh.js","../../node_modules/proj4/lib/common/clens_cmplx.js","../../node_modules/proj4/lib/projections/etmerc.js","../../node_modules/proj4/lib/common/adjust_zone.js","../../node_modules/proj4/lib/projections/utm.js","../../node_modules/proj4/lib/common/srat.js","../../node_modules/proj4/lib/projections/gauss.js","../../node_modules/proj4/lib/projections/sterea.js","../../node_modules/proj4/lib/projections/stere.js","../../node_modules/proj4/lib/projections/somerc.js","../../node_modules/proj4/lib/projections/omerc.js","../../node_modules/proj4/lib/projections/lcc.js","../../node_modules/proj4/lib/projections/krovak.js","../../node_modules/proj4/lib/common/mlfn.js","../../node_modules/proj4/lib/common/e0fn.js","../../node_modules/proj4/lib/common/e1fn.js","../../node_modules/proj4/lib/common/e2fn.js","../../node_modules/proj4/lib/common/e3fn.js","../../node_modules/proj4/lib/common/gN.js","../../node_modules/proj4/lib/common/adjust_lat.js","../../node_modules/proj4/lib/common/imlfn.js","../../node_modules/proj4/lib/projections/cass.js","../../node_modules/proj4/lib/common/qsfnz.js","../../node_modules/proj4/lib/projections/laea.js","../../node_modules/proj4/lib/common/asinz.js","../../node_modules/proj4/lib/projections/aea.js","../../node_modules/proj4/lib/projections/gnom.js","../../node_modules/proj4/lib/common/iqsfnz.js","../../node_modules/proj4/lib/projections/cea.js","../../node_modules/proj4/lib/projections/eqc.js","../../node_modules/proj4/lib/projections/poly.js","../../node_modules/proj4/lib/projections/nzmg.js","../../node_modules/proj4/lib/projections/mill.js","../../node_modules/proj4/lib/projections/sinu.js","../../node_modules/proj4/lib/projections/moll.js","../../node_modules/proj4/lib/projections/eqdc.js","../../node_modules/proj4/lib/projections/vandg.js","../../node_modules/proj4/lib/projections/aeqd.js","../../node_modules/proj4/lib/projections/ortho.js","../../node_modules/proj4/lib/projections/qsc.js","../../node_modules/proj4/lib/projections/robin.js","../../node_modules/proj4/lib/projections/geocent.js","../../node_modules/proj4/lib/projections/tpers.js","../../node_modules/proj4/lib/projections/geos.js","../../node_modules/proj4/projs.js","../../node_modules/proj4/lib/index.js","../../node_modules/ol/proj/proj4.js"],"sourcesContent":["/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/wms\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 52);\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (!hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previsouly set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        })\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse)\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return get(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return get(epsgCode);\n}\n"],"names":["compareVersions","v1","v2","s1","s2","i","n1","n2","appendParams","uri","params","keyParams","k","qs","DEFAULT_VERSION","BaseImageLayer","Layer","options","BaseImageLayer$1","CanvasImageLayerRenderer","CanvasLayerRenderer","imageLayer","frameState","layerState","pixelRatio","viewState","viewResolution","imageSource","hints","renderedExtent","getIntersection","fromUserExtent","ViewHint","isEmpty","projection","image","ImageState","pixel","layer","coordinate","applyTransform","layerExtent","containsCoordinate","imageExtent","img","imageMapWidth","getWidth","col","imageMapHeight","getHeight","row","target","imageResolution","imagePixelRatio","viewCenter","scale","extent","resolution","rotation","width","height","composeTransform","makeInverse","canvasTransform","toTransformString","context","canvas","clipped","render","intersectsExtent","containsExtent","transform","dw","dh","dx","dy","opacity","previousAlpha","CanvasImageLayerRenderer$1","ImageLayer","ImageLayer$1","TileWMS","TileImage","transparent","createEmpty","projectionObj","getProjection","sourceProjectionObj","tileGrid","z","tileCoord","tileResolution","tileExtent","tileSize","toSize","gutter","bufferSize","buffer","calculateSourceResolution","transformExtent","baseParams","x","y","layers","mpu","pixelSize","urls","dpi","assert","axisOrientation","bbox","tmp","url","index","modulo","tileCoordHash","res","key","version","scaleSize","TileWMS$1","globals","defs","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","units","ignoredChar","match","obj","keys","lkey","testkey","processedKey","projStr","defData","self","paramObj","v","a","p","split","paramName","paramVal","paramOutname","unit","pm","PrimeMeridian","legalAxis","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","char","newObjects","parseString","txt","parser","mapit","value","thing","out","newObj","item","sExpr","rename","outName","inName","d2r","input","cleanWKT","wkt","axisOrder","ii","axis","geogcs","toMeter","ratio","renamer","list","lisp","type","name","that","def","parseProj","testObj","code","testDef","codeWords","testWKT","word","codes","checkMercator","auth","checkProjStr","ext","testProj","parse","maybeProjStr","extend","destination","source","property","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","tsfnz","phi","com","phi2z","ts","eccnth","dphi","init","forward","lon","lat","inverse","names","merc","identity","pt","longlat","projs","projStore","add","proj","len","n","get","start","projections","WGS84","eccentricity","b","rf","R_A","a2","b2","es","e","ep2","sphere","ellps","ellipse","Ellipsoid","datum","datumCode","datum_params","nadgrids","loadedNadgrids","nadgrid","data","view","isLittleEndian","detectLittleEndian","header","readHeader","subgrids","readSubgrids","getNadgrids","grids","parseNadgridString","optional","secondsToRadians","seconds","nFields","decodeString","end","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","lngColumnCount","latColumnCount","mapNodes","r","offset","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","Projection","srsCode","callback","error","json","parseCode","ourProj","datumDef","Datum","sphere_","dc_sphere","ecc","dc_eccentricity","datumObj","compareDatums","dest","geodeticToGeocentric","Longitude","Latitude","Height","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","geocentricToGeodetic","genau","genau2","maxiter","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","geocentricToWgs84","datum_type","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","datum_transform","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","output","attemptedGrids","grid","subgrid","epsilon","minX","minY","maxX","maxY","applySubgridShift","pin","ct","val","tb","t","nadInterpolate","tol","dif","del","indx","frct","inx","f00","f10","f11","f01","m11","m10","m00","m01","adjust_axis","crs","denorm","xin","yin","zin","common","array","checkSanity","checkCoord","num","checkNotWGS","enforceAxis","wgs84","toPoint","hasZ","transformer","from","to","coords","transformedArray","checkProj","proj4","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","ll","accuracy","encode","LLtoUTM","UTMtoLL","decode","degToRad","deg","radToDeg","rad","Lat","Long","eccSquared","k0","LongOrigin","eccPrimeSquared","N","T","C","M","LatRad","LongRad","LongOriginRad","ZoneNumber","UTMEasting","UTMNorthing","getLetterDesignator","utm","zoneLetter","zoneNumber","e1","N1","T1","C1","R1","D","mu","phi1Rad","result","topRight","LetterDesignator","seasting","snorthing","get100kID","easting","northing","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","column","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","length","hunK","sb","testChar","set","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","sep","sepEasting","sepNorthing","accuracyBonus","sepEastingString","sepNorthingString","curCol","eastingValue","rewindMarker","curRow","northingValue","Point","mgrsStr","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","pj_enfn","en","pj_mlfn","sphi","cphi","MAX_ITER","pj_inv_mlfn","arg","s","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","tan_phi","c","d","ds","f","g","temp","h","tmerc","sinh","hypot","log1py","asinhy","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr1","hr2","hr","cosh","clens_cmplx","arg_i","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","j","hi1","hi","hi2","np","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","etmerc","adjust_zone","zone","dependsOn","srat","esinp","exp","DEL_TOL","gauss","sinc","cosc","cosl","rho","sterea","ssfn_","phit","eccen","sinlat","coslat","sinX","cosX","rh","dlon","ce","Chi","stere","phy0","sinPhy0","semiMajorAxis","invF","flattening","e2","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","somerc","TOL","isTypeA","typeAProjections","projectionName","cosph0","F","H","L","sinph0","J","gamma","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","alp","gam","one_es","U","W","u","Qp","Sp","Tp","Vp","Up","omerc","sin1","cos1","ms1","ts1","sin2","cos2","ms2","ts2","ts0","rh1","theta","lcc","gfi","deltav","eps","ro","fi1","ok","krovak","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","lam","nl","tl","asq","cl","dd","ml1","nl1","rl1","tl1","dl","dsq","cass","qsfnz","S_POLE","N_POLE","EQUIT","OBLIQ","authset","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","laea","asinz","phi1z","eccnts","aea","coslon","ksp","gnom","iqsfnz","cea","dlat","eqc","el","bl","tanphi","mln","mlnp","ma","poly","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_re","th_im","th_n_re","th_n_im","th_n_re1","th_n_im1","z_re","z_im","delta_x","delta_y","z_n_re","z_n_im","z_n_re1","z_n_im1","num_re","num_im","den_re","den_im","den2","d_psi_n","nzmg","mill","sinu","delta_theta","moll","eqdc","sinth","costh","gsq","m","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","vandg","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s3","s4","s5","cosAz","Ee","sinpsi","aeqd","ortho","FACE_ENUM","AREA_ENUM","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","lp","nu","cosmu","tannu","tantheta","invert_sign","xa","slon","qsc","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","robin","geocent","mode","omega","yt","ba","bm","bq","tpers","rone_es","v_x","v_y","v_z","det","v_zp","geos","includedProjections","Proj","registered","register","projCodes","addProjection","code1","proj1","code2","proj2","getTransform","addEquivalentProjections","addCoordinateTransforms","createSafeCoordinateTransform"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98]}