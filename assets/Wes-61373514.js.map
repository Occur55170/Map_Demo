{"version":3,"file":"Wes-61373514.js","sources":["../../src/view/Wes.vue"],"sourcesContent":["<script>\r\nimport { useSlots, onBeforeMount, onMounted, onBeforeUnmount, ref, reactive, computed, watch, nextTick, defineAsyncComponent, useCssModule, inject, getCurrentInstance } from 'vue'\r\nimport $ from 'jquery'\r\nimport { Map, View, Feature } from 'ol'\r\nimport Select from 'ol/interaction/Select';\r\nimport { click } from 'ol/events/condition';\r\nimport XYZ from 'ol/source/XYZ'\r\nimport VectorSource from 'ol/source/Vector.js'\r\nimport { Icon, Style } from 'ol/style.js'\r\nimport { Tile, Tile as TileLayer, Image as ImageLayer, Vector, Vector as VectorLayer } from 'ol/layer.js'\r\nimport { Point } from 'ol/geom.js'\r\nimport OLCesium from 'olcs/OLCesium.js';\r\nimport 'ol/ol.css'\r\nimport mapLayerList from '@/config/mapLayerList'\r\nimport baseMapList, { getBaseMapAll } from '@/config/baseMapList'\r\nimport 'ol-ext/dist/ol-ext.css'\r\nimport * as olTilecoord from 'ol/tilecoord'\r\nimport { get as getProjection } from 'ol/proj'\r\nimport WMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js'\r\nimport Overlay from 'ol/Overlay.js'\r\nexport default {\r\n    props: {},\r\n    setup(props, { emit }) {\r\n        const mapLayers = mapLayerList\r\n        const state = reactive({\r\n            defaultCenter: [121.326776, 24.655499],\r\n            defaultCenterZoom: 9,\r\n            targetNum: 1,\r\n            conditionWrap: false,\r\n            layerSelect: false,\r\n            currentLayers: [],\r\n            layers: [],\r\n            mapLayers: computed(() => {\r\n                return state.layers.map((node, index) => {\r\n                    return {\r\n                        label: node.group_title,\r\n                        value: node.value,\r\n                        layers: node.group_layers,\r\n                        groupClass: node.group_class\r\n                    }\r\n                })\r\n            }),\r\n            selectLock: false,\r\n            mapCount: 1,\r\n            map1: null,\r\n            map2: null,\r\n            map1LayerStatus: [],\r\n            map2LayerStatus: [],\r\n            temp: {\r\n                map1BaseStatus: 0,\r\n                map2BaseStatus: 0,\r\n            },\r\n            deleteLightbox: false,\r\n            // 目前地圖狀態為2D or 3D\r\n            dimensionMap: {\r\n                map1: '2D',\r\n                map2: '2D'\r\n            },\r\n            toSearchDimensionStatus: computed(() => {\r\n                let target = state.targetNum == 1 ? 'map1' : 'map2'\r\n                return state.dimensionMap[target] === '2D'\r\n            }),\r\n            ol3d: null,\r\n            selectValueTemp: 0,\r\n            areaData: {\r\n                nodeRef: null,\r\n                overlay: null,\r\n                tribeAreaData: {},\r\n            },\r\n            comSize: {\r\n                wrapHeight: '',\r\n                wrapWidth: '',\r\n                conditionCom: {},\r\n            },\r\n            selectLayerOption: {}\r\n        })\r\n        let ol3d = null\r\n        const defaultView = new View({\r\n            projection: 'EPSG:4326',\r\n            center: state.defaultCenter,\r\n            zoom: state.defaultCenterZoom,\r\n        })\r\n        // 初始化地圖\r\n        function initMap() {\r\n            state.map1 = new Map({\r\n                target: 'map1',\r\n                layers: [\r\n                    baseMapList.getBaseMapData(0)\r\n                ],\r\n                view: defaultView,\r\n                controls: [],\r\n            })\r\n            const extent = [117.1595, 21.2646, 123.9804, 26.5353];\r\n            const xCenter = (extent[2] + extent[0]) / 2;\r\n            const yCenter = (extent[3] + extent[1]) / 2;\r\n            const iconFeature = new Feature({\r\n                geometry: new Point([xCenter, yCenter]),\r\n            });\r\n            const vectorLayer = new VectorLayer({\r\n                source: new VectorSource({\r\n                    features: [iconFeature]\r\n                }),\r\n            });\r\n            state.map1.addLayer(vectorLayer)\r\n            const gifUrl = 'http://localhost:5173/forecast.gif';\r\n            const gif = gifler(gifUrl);\r\n            const extentWidth = extent[2] - extent[0];\r\n            const extentHeight = extent[3] - extent[1];\r\n            gif.frames(\r\n                document.createElement('canvas'),\r\n                function (ctx, frame) {\r\n                    const scaleX = extentWidth / frame.width;\r\n                    const scaleY = extentHeight / frame.height;\r\n                    const baseScale = Math.min(scaleX, scaleY);\r\n                    // 獲取當前地圖的解析度\r\n                    const currentResolution = state.map1.getView().getResolution();\r\n                    iconFeature.setStyle(\r\n                        new Style({\r\n                            image: new Icon({\r\n                                img: ctx.canvas,\r\n                                imgSize: [frame.width, frame.height],\r\n                                opacity: 0.8,\r\n                                scale: baseScale / currentResolution\r\n                            }),\r\n                        })\r\n                    );\r\n                    ctx.clearRect(0, 0, frame.width, frame.height);\r\n                    ctx.drawImage(frame.buffer, frame.x, frame.y);\r\n                    // state.map1.render();\r\n                },\r\n                true\r\n            );\r\n        }\r\n        function getCurrentMapData() {\r\n            let target = state.targetNum == 1 ? state.map1 : state.map2\r\n            const layers = target?.getLayers()?.getArray()\r\n            state.currentLayers = layers?.map(layer => {\r\n                return {\r\n                    label: layer.get('label'),\r\n                    id: layer.get('id'),\r\n                    visible: layer.getVisible(),\r\n                }\r\n            })\r\n        }\r\n        function getBaseData() {\r\n            return $.ajax({\r\n                url: 'https://api.edtest.site/underLayers',\r\n                method: 'GET'\r\n            }).done(res => {\r\n                return res\r\n            })\r\n        }\r\n        function getLayerData() {\r\n            return $.ajax({\r\n                url: 'https://api.edtest.site/layers',\r\n                method: \"GET\"\r\n            }).done(res => {\r\n                return (res)\r\n            })\r\n        }\r\n        onMounted(async () => {\r\n            let a = getBaseData()\r\n            let b = getLayerData()\r\n            Promise.all([a, b]).then((value) => {\r\n                // TODO: pref\r\n                let result = value[0].data.map((node, nodeIndex) => {\r\n                    return {\r\n                        mapType: 'base',\r\n                        baseId: nodeIndex,\r\n                        onCurrent: false,\r\n                        ...node\r\n                    }\r\n                })\r\n                baseMapList.setBaseMapData(result)\r\n                state.temp.map1BaseStatus = 0\r\n                state.temp.baseMapList = getBaseMapAll()\r\n                state.layers = value[1].map((node, index) => {\r\n                    node.group_layers.forEach((sub, subIndex) => {\r\n                        let subNodeIndex = subIndex, nestedSubNodeIndex = undefined\r\n                        sub.id = `node${index}_subNode${subNodeIndex}_nestedSubNode${nestedSubNodeIndex}`\r\n                        if (!(sub.single_tiles)) {\r\n                            sub.tiles_list.forEach((nestedSub, nestedSubIndex) => {\r\n                                nestedSubNodeIndex = nestedSubIndex\r\n                                nestedSub.id = `node${index}_subNode${subNodeIndex}_nestedSubNode${nestedSubNodeIndex}`\r\n                            })\r\n                        }\r\n                    })\r\n                    return {\r\n                        ...node,\r\n                        value: index,\r\n                    }\r\n                })\r\n                nextTick(() => {\r\n                    initMap()\r\n                    getCurrentMapData()\r\n                })\r\n            })\r\n            state.comSize.wrapHeight = window.innerHeight\r\n            state.comSize.wrapWidth = window.innerWidth\r\n            window.onresize = (e) => {\r\n                state.comSize.wrapHeight = e.target.innerHeight\r\n                state.comSize.wrapWidth = e.target.innerWidth\r\n            }\r\n        })\r\n        return {\r\n            state,\r\n            props,\r\n        }\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <div>\r\n        <div class=\"w-100 d-flex flex flex-sm-row flex-wrap flex-sm-nowrap mapWrap\" id=\"mapWrap\">\r\n            <!-- TODO: 寬度設定是否調整 -->\r\n            <div id=\"map1\"\r\n                :class=\"{ 'w-100': state.map1?.getTarget() == 'map1', 'h-100': state.mapCount === 1, 'h-50': state.mapCount === 2 && (state.comSize.wrapWidth < 600) }\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<style lang=\"sass\">\r\n@import '@/assets/styles/all.module.scss'\r\n.mapWrap\r\n    justify-content: space-between\r\n    height: 100vh\r\n.mapWrap .ol-viewport\r\n    height: 100vh\r\n    width: 100vw\r\n.asideTool\r\n    z-index: 220\r\n    left: 5px\r\n.SearchBar\r\n    top: 20px\r\n    left: 20px\r\n    z-index: 220\r\n.conditionCom\r\n    width: 480px\r\n    right: 1%\r\n    bottom: 5%\r\n.middleLine\r\n    width: 5px\r\n    background: $blue-steel\r\n.areaData\r\n    width: 450px\r\n    max-height: 550px\r\n    background: #fff\r\n    box-sizing: border-box\r\n    border-radius: 10px\r\n    border: 1px solid #088\r\n@media (max-width: 600px)\r\n    .m-Navbar\r\n        z-index: 222\r\n    .middleLine\r\n        height: 1px\r\n        width: 100%\r\n</style>"],"names":["_sfc_main","props","emit","state","reactive","node","index","computed","target","initMap","Map","defaultView","xCenter","extent","yCenter","Point","vectorLayer","VectorLayer","iconFeature","extentWidth","extentHeight","ctx","frame","scaleX","scaleY","baseScale","Style","Icon","currentResolution","layers","_a","layer","getBaseData","res","onMounted","a","b","getLayerData","value","nodeIndex","baseMapList","result","getBaseMapAll","sub","subIndex","subNodeIndex","nestedSubNodeIndex","nestedSubIndex","nestedSub","getCurrentMapData","e","_createElementVNode","_hoisted_1","_normalizeClass","$setup"],"mappings":"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"}