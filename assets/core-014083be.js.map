{"version":3,"file":"core-014083be.js","sources":["../../node_modules/ol/AssertionError.js","../../node_modules/ol/events/Event.js","../../node_modules/ol/ObjectEventType.js","../../node_modules/ol/Disposable.js","../../node_modules/ol/array.js","../../node_modules/ol/functions.js","../../node_modules/ol/obj.js","../../node_modules/ol/events/Target.js","../../node_modules/ol/events/EventType.js","../../node_modules/ol/events.js","../../node_modules/ol/Observable.js","../../node_modules/ol/util.js","../../node_modules/ol/Object.js","../../node_modules/ol/CollectionEventType.js","../../node_modules/ol/Collection.js","../../node_modules/ol/asserts.js","../../node_modules/ol/Feature.js","../../node_modules/ol/has.js","../../node_modules/ol/transform.js","../../node_modules/ol/extent/Relationship.js","../../node_modules/ol/extent.js","../../node_modules/ol/proj/Units.js","../../node_modules/ol/proj/Projection.js","../../node_modules/ol/proj/epsg3857.js","../../node_modules/ol/proj/epsg4326.js","../../node_modules/ol/proj/projections.js","../../node_modules/ol/proj/transforms.js","../../node_modules/ol/math.js","../../node_modules/ol/string.js","../../node_modules/ol/coordinate.js","../../node_modules/ol/sphere.js","../../node_modules/ol/console.js","../../node_modules/ol/proj.js","../../node_modules/ol/geom/flat/transform.js","../../node_modules/ol/geom/Geometry.js","../../node_modules/ol/geom/SimpleGeometry.js","../../node_modules/ol/geom/flat/closest.js","../../node_modules/ol/geom/flat/deflate.js","../../node_modules/ol/geom/flat/simplify.js","../../node_modules/ol/geom/flat/inflate.js","../../node_modules/ol/geom/flat/area.js","../../node_modules/ol/geom/LinearRing.js","../../node_modules/ol/geom/Point.js","../../node_modules/ol/geom/flat/contains.js","../../node_modules/ol/geom/flat/interiorpoint.js","../../node_modules/ol/geom/flat/segments.js","../../node_modules/ol/geom/flat/intersectsextent.js","../../node_modules/ol/geom/flat/reverse.js","../../node_modules/ol/geom/flat/orient.js","../../node_modules/ol/geom/Polygon.js","../../node_modules/ol/render/EventType.js","../../node_modules/ol/style/Fill.js","../../node_modules/ol/geom/flat/interpolate.js","../../node_modules/ol/geom/flat/length.js","../../node_modules/ol/geom/LineString.js","../../node_modules/ol/style/Stroke.js","../../node_modules/ol/ImageState.js","../../node_modules/ol/size.js","../../node_modules/ol/style/Image.js","../../node_modules/ol/color.js","../../node_modules/ol/colorlike.js","../../node_modules/ol/dom.js","../../node_modules/ol/css.js","../../node_modules/ol/render/canvas.js","../../node_modules/ol/style/RegularShape.js","../../node_modules/ol/style/Circle.js","../../node_modules/ol/style/Style.js","../../node_modules/ol/style/Text.js","../../node_modules/ol/layer/Property.js","../../node_modules/ol/layer/Base.js","../../node_modules/ol/layer/Layer.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../../node_modules/ol/style/IconImageCache.js","../../node_modules/ol/ImageBase.js","../../node_modules/ol/Image.js","../../node_modules/ol/style/IconImage.js","../../node_modules/ol/style/Icon.js","../../node_modules/ol/style/flat.js","../../node_modules/ol/layer/BaseVector.js","../../node_modules/ol/render/canvas/Instruction.js","../../node_modules/ol/render/VectorContext.js","../../node_modules/ol/render/canvas/Builder.js","../../node_modules/ol/render/canvas/ImageBuilder.js","../../node_modules/ol/render/canvas/LineStringBuilder.js","../../node_modules/ol/render/canvas/PolygonBuilder.js","../../node_modules/ol/geom/flat/straightchunk.js","../../node_modules/ol/render/canvas/TextBuilder.js","../../node_modules/ol/render/canvas/BuilderGroup.js","../../node_modules/ol/renderer/Layer.js","../../node_modules/ol/render/Event.js","../../node_modules/ol/renderer/canvas/Layer.js","../../node_modules/ol/geom/flat/textpath.js","../../node_modules/ol/render/canvas/Executor.js","../../node_modules/ol/render/canvas/ExecutorGroup.js","../../node_modules/ol/ViewHint.js","../../node_modules/ol/render/canvas/Immediate.js","../../node_modules/ol/render/canvas/hitdetect.js","../../node_modules/ol/renderer/vector.js","../../node_modules/ol/renderer/canvas/VectorLayer.js","../../node_modules/ol/layer/Vector.js","../../node_modules/ol/structs/RBush.js","../../node_modules/ol/source/Source.js","../../node_modules/ol/source/VectorEventType.js","../../node_modules/ol/loadingstrategy.js","../../node_modules/ol/featureloader.js","../../node_modules/ol/source/Vector.js","../../node_modules/ol/render.js","../../node_modules/ol/TileState.js","../../node_modules/ol/easing.js","../../node_modules/ol/Tile.js","../../node_modules/ol/ImageTile.js","../../node_modules/ol/Kinetic.js","../../node_modules/ol/renderer/Map.js","../../node_modules/ol/renderer/Composite.js","../../node_modules/ol/layer/Group.js","../../node_modules/ol/MapEvent.js","../../node_modules/ol/MapBrowserEvent.js","../../node_modules/ol/MapBrowserEventType.js","../../node_modules/ol/pointer/EventType.js","../../node_modules/ol/MapBrowserEventHandler.js","../../node_modules/ol/MapEventType.js","../../node_modules/ol/MapProperty.js","../../node_modules/ol/structs/PriorityQueue.js","../../node_modules/ol/TileQueue.js","../../node_modules/ol/ViewProperty.js","../../node_modules/ol/tilegrid/common.js","../../node_modules/ol/centerconstraint.js","../../node_modules/ol/resolutionconstraint.js","../../node_modules/ol/rotationconstraint.js","../../node_modules/ol/View.js","../../node_modules/ol/control/Control.js","../../node_modules/ol/control/Attribution.js","../../node_modules/ol/control/Rotate.js","../../node_modules/ol/control/Zoom.js","../../node_modules/ol/control/defaults.js","../../node_modules/ol/interaction/Property.js","../../node_modules/ol/interaction/Interaction.js","../../node_modules/ol/interaction/DoubleClickZoom.js","../../node_modules/ol/interaction/Pointer.js","../../node_modules/ol/events/condition.js","../../node_modules/ol/interaction/DragPan.js","../../node_modules/ol/interaction/DragRotate.js","../../node_modules/ol/render/Box.js","../../node_modules/ol/interaction/DragBox.js","../../node_modules/ol/interaction/DragZoom.js","../../node_modules/ol/events/KeyCode.js","../../node_modules/ol/interaction/KeyboardPan.js","../../node_modules/ol/interaction/KeyboardZoom.js","../../node_modules/ol/interaction/MouseWheelZoom.js","../../node_modules/ol/interaction/PinchRotate.js","../../node_modules/ol/interaction/PinchZoom.js","../../node_modules/ol/interaction/defaults.js","../../node_modules/ol/Map.js","../../node_modules/ol/Overlay.js","../../node_modules/ol/structs/LRUCache.js","../../node_modules/ol/tilecoord.js","../../node_modules/ol/TileCache.js","../../node_modules/ol/TileRange.js","../../node_modules/ol/VectorRenderTile.js","../../node_modules/ol/VectorTile.js","../../node_modules/ol/reproj/common.js","../../node_modules/ol/reproj/Triangulation.js","../../node_modules/ol/reproj.js","../../node_modules/ol/reproj/Tile.js","../../node_modules/ol/source/TileEventType.js","../../node_modules/ol/tilegrid/TileGrid.js","../../node_modules/ol/tilegrid.js","../../node_modules/ol/source/Tile.js","../../node_modules/ol/tileurlfunction.js","../../node_modules/ol/source/UrlTile.js","../../node_modules/ol/source/TileImage.js","../../node_modules/ol/source/XYZ.js","../../node_modules/ol/reproj/Image.js","../../node_modules/ol/source/Image.js","../../node_modules/ol/uri.js","../../node_modules/ol/source/ImageStatic.js","../../node_modules/ol/source/wms.js","../../node_modules/ol/source/ImageWMS.js","../../node_modules/ol/source/OSM.js","../../node_modules/ol/layer/BaseImage.js","../../node_modules/ol/renderer/canvas/ImageLayer.js","../../node_modules/ol/layer/Image.js","../../node_modules/ol/layer/TileProperty.js","../../node_modules/ol/layer/BaseTile.js","../../node_modules/ol/renderer/canvas/TileLayer.js","../../node_modules/ol/layer/Tile.js","../../node_modules/ol/source/TileWMS.js","../../node_modules/ol/source/VectorTile.js","../../node_modules/ol/format/Feature.js","../../node_modules/ol/geom/MultiLineString.js","../../node_modules/ol/geom/MultiPoint.js","../../node_modules/ol/geom/flat/center.js","../../node_modules/ol/geom/MultiPolygon.js","../../node_modules/ieee754/index.js","../../node_modules/pbf/index.js","../../node_modules/ol/geom/Circle.js","../../node_modules/ol/render/Feature.js","../../node_modules/ol/format/MVT.js","../../node_modules/ol/renderer/canvas/VectorTileLayer.js","../../node_modules/ol/layer/VectorTile.js","../../node_modules/ol-ext/util/input/Base.js","../../node_modules/ol-ext/util/input/Checkbox.js","../../node_modules/ol-ext/util/input/Switch.js","../../node_modules/ol-ext/util/input/Radio.js","../../node_modules/ol-ext/util/element.js","../../node_modules/ol-ext/util/matrix3D.js","../../node_modules/ol-ext/map/PerspectiveMap.js","../../src/config/baseMapList.js","../../node_modules/olcs/util.js","../../node_modules/olcs/core/OLImageryProvider.js","../../node_modules/olcs/MVTImageryProvider.js","../../node_modules/olcs/core.js"],"sourcesContent":["/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n  let i;\n  if (direction > 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n  } else if (direction < 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n  } else {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] == target) {\n        return i;\n      } else if (arr[i] < target) {\n        if (typeof direction === 'function') {\n          if (direction(target, arr[i - 1], arr[i]) > 0) {\n            return i - 1;\n          }\n          return i;\n        } else if (arr[i - 1] - target < target - arr[i]) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.2.2';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.height_ = options.height;\n\n    /**\n     * Recalculate the scale if width or height where given.\n     */\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      const image = this.getImage(1);\n      const setScale = () => {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      };\n      if (image.width > 0) {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      } else {\n        image.addEventListener('load', setScale);\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n      width: this.width_,\n      height: this.height_,\n    });\n  }\n\n  /**\n   * Set the scale of the Icon by calculating it from given width and height and the\n   * width and height of the image.\n   *\n   * @private\n   * @param {number} width The width.\n   * @param {number} height The height.\n   */\n  updateScaleFromWidthAndHeight(width, height) {\n    const image = this.getImage(1);\n    if (width !== undefined && height !== undefined) {\n      super.setScale([width / image.width, height / image.height]);\n    } else if (width !== undefined) {\n      super.setScale([width / image.width, width / image.width]);\n    } else if (height !== undefined) {\n      super.setScale([height / image.height, height / image.height]);\n    } else {\n      super.setScale([1, 1]);\n    }\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels).\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Get the height of the icon (in pixels).\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    return this.height_;\n  }\n\n  /**\n   * Set the width of the icon in pixels.\n   *\n   * @param {number} width The width to set.\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.updateScaleFromWidthAndHeight(width, this.height_);\n  }\n\n  /**\n   * Set the height of the icon in pixels.\n   *\n   * @param {number} height The height to set.\n   */\n  setHeight(height) {\n    this.height_ = height;\n    this.updateScaleFromWidthAndHeight(this.width_, height);\n  }\n\n  /**\n   * Set the scale and updates the width and height correspondingly.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @override\n   * @api\n   */\n  setScale(scale) {\n    super.setScale(scale);\n    const image = this.getImage(1);\n    if (image) {\n      const widthScale = Array.isArray(scale) ? scale[0] : scale;\n      if (widthScale !== undefined) {\n        this.width_ = widthScale * image.width;\n      }\n      const heightScale = Array.isArray(scale) ? scale[1] : scale;\n      if (heightScale !== undefined) {\n        this.height_ = heightScale * image.height;\n      }\n    }\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {getCenter, getHeight, getIntersection, getWidth} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(\n      sourceExtent,\n      sourceResolution,\n      pixelRatio\n    );\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getHeight, getWidth, intersects} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      this.url_,\n      crossOrigin,\n      imageLoadFunction\n    );\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const extentWidth = getWidth(imageExtent);\n      const extentHeight = getHeight(imageExtent);\n      const xResolution = extentWidth / imageWidth;\n      const yResolution = extentHeight / imageHeight;\n      let targetWidth = imageWidth;\n      let targetHeight = imageHeight;\n      if (xResolution > yResolution) {\n        targetWidth = Math.round(extentWidth / yResolution);\n      } else {\n        targetHeight = Math.round(extentHeight / xResolution);\n      }\n      if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n        const context = createCanvasContext2D(targetWidth, targetHeight);\n        if (!this.getInterpolate()) {\n          context.imageSmoothingEnabled = false;\n        }\n        const canvas = context.canvas;\n        context.drawImage(\n          image,\n          0,\n          0,\n          imageWidth,\n          imageHeight,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/wms\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {ceil, floor, round} from '../math.js';\nimport {compareVersions} from '../string.js';\nimport {\n  containsExtent,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 4;\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n    const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0, [\n      viewWidth,\n      viewHeight,\n    ]);\n    const requestWidth = ceil(\n      (this.ratio_ * getWidth(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestHeight = ceil(\n      (this.ratio_ * getHeight(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestExtent = getForViewAndSize(center, imageResolution, 0, [\n      requestWidth,\n      requestHeight,\n    ]);\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    this.imageSize_[0] = round(\n      getWidth(requestExtent) / imageResolution,\n      DECIMALS\n    );\n    this.imageSize_[1] = round(\n      getHeight(requestExtent) / imageResolution,\n      DECIMALS\n    );\n\n    const url = this.getRequestUrl_(\n      requestExtent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      requestExtent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 8);\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 52);\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/** Vanilla JS geographic inputs\r\n * color, size, width, font, symboles, dash, arrow, pattern\r\n */\r\nimport ol_Object from 'ol/Object.js'\r\n\r\n/** @namespace  ol.ext.input\r\n */\r\n/*global ol*/\r\nif (window.ol && ol.ext && !ol.ext.input) {\r\n  ol.ext.input = {};\r\n}\r\n\r\n/** Abstract base class; normally only used for creating subclasses and not instantiated in apps.    \r\n * @constructor\r\n * @extends {ol_Object}\r\n * @param {*} options\r\n *  @param {Element} [options.input] input element, if none create one\r\n *  @param {string} [options.type] input type, if no input\r\n *  @param {number} [options.min] input min, if no input\r\n *  @param {number} [options.max] input max, if no input\r\n *  @param {number} [options.step] input step, if no input\r\n *  @param {string|number} [options.val] input value\r\n *  @param {boolean} [options.checked] check input\r\n *  @param {boolean} [options.hidden] the input is display:none\r\n *  @param {boolean} [options.disabled] disable input\r\n *  @param {Element} [options.parent] parent element, if no input\r\n */\r\nvar ol_ext_input_Base = class olextinputBase extends ol_Object {\r\n  constructor(options) {\r\n    options = options || {};\r\n    super();\r\n\r\n    var input = this.input = options.input;\r\n    if (!input) {\r\n      input = this.input = document.createElement('INPUT');\r\n      if (options.type)\r\n        input.setAttribute('type', options.type);\r\n      if (options.min !== undefined)\r\n        input.setAttribute('min', options.min);\r\n      if (options.max !== undefined)\r\n        input.setAttribute('max', options.max);\r\n      if (options.step !== undefined)\r\n        input.setAttribute('step', options.step);\r\n      if (options.parent)\r\n        options.parent.appendChild(input);\r\n    }\r\n    if (options.disabled)\r\n      input.disabled = true;\r\n    if (options.checked !== undefined)\r\n      input.checked = !!options.checked;\r\n    if (options.val !== undefined)\r\n      input.value = options.val;\r\n    if (options.hidden)\r\n      input.style.display = 'none';\r\n    input.addEventListener('focus', function () {\r\n      if (this.element)\r\n        this.element.classList.add('ol-focus');\r\n    }.bind(this));\r\n    var tout;\r\n    input.addEventListener('focusout', function () {\r\n      if (this.element) {\r\n        if (tout)\r\n          clearTimeout(tout);\r\n        tout = setTimeout(function () {\r\n          this.element.classList.remove('ol-focus');\r\n        }.bind(this), 0);\r\n      }\r\n    }.bind(this));\r\n  }\r\n  /** Listen to drag event\r\n   * @param {Element} elt\r\n   * @param {function} cback when draggin on the element\r\n   * @private\r\n   */\r\n  _listenDrag(elt, cback) {\r\n    var handle = function (e) {\r\n      this.moving = true;\r\n      this.element.classList.add('ol-moving');\r\n      var listen = function (e) {\r\n        if (e.type === 'pointerup') {\r\n          document.removeEventListener('pointermove', listen);\r\n          document.removeEventListener('pointerup', listen);\r\n          document.removeEventListener('pointercancel', listen);\r\n          setTimeout(function () {\r\n            this.moving = false;\r\n            this.element.classList.remove('ol-moving');\r\n          }.bind(this));\r\n        }\r\n        if (e.target === elt)\r\n          cback(e);\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }.bind(this);\r\n      document.addEventListener('pointermove', listen, false);\r\n      document.addEventListener('pointerup', listen, false);\r\n      document.addEventListener('pointercancel', listen, false);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    }.bind(this);\r\n    elt.addEventListener('mousedown', handle, false);\r\n    elt.addEventListener('touchstart', handle, false);\r\n  }\r\n  /** Set the current value\r\n   */\r\n  setValue(v) {\r\n    if (v !== undefined)\r\n      this.input.value = v;\r\n    this.input.dispatchEvent(new Event('change'));\r\n  }\r\n  /** Get the current getValue\r\n   * @returns {string}\r\n   */\r\n  getValue() {\r\n    return this.input.value;\r\n  }\r\n  /** Get the input element\r\n   * @returns {Element}\r\n   */\r\n  getInputElement() {\r\n    return this.input;\r\n  }\r\n}\r\n\r\nexport default ol_ext_input_Base\r\n","import ol_ext_input_Base from './Base.js'\r\n\r\n/** Checkbox input\r\n * @constructor\r\n * @extends {ol_ext_input_Base}\r\n * @fires check\r\n * @param {*} options\r\n *  @param {string} [options.className]\r\n *  @param {Element|string} [options.html] label content\r\n *  @param {string} [options.after] label garnish (placed after)\r\n *  @param {Element} [options.input] input element, if non create one\r\n *  @param {Element} [options.parent] parent element, if create an input\r\n *  @param {boolean} [options.autoClose=true]\r\n *  @param {boolean} [options.visible=false] display the input\r\n */\r\nvar ol_ext_input_Checkbox = class olextinputCheckbox extends ol_ext_input_Base {\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    super(options);\r\n\r\n    var label = this.element = document.createElement('LABEL');\r\n    if (options.html instanceof Element)\r\n      label.appendChild(options.html);\r\n    else if (options.html !== undefined)\r\n      label.innerHTML = options.html;\r\n    label.className = ('ol-ext-check ol-ext-checkbox ' + (options.className || '')).trim();\r\n\r\n    if (this.input.parentNode)\r\n      this.input.parentNode.insertBefore(label, this.input);\r\n    label.appendChild(this.input);\r\n    label.appendChild(document.createElement('SPAN'));\r\n    if (options.after) {\r\n      label.appendChild(document.createTextNode(options.after));\r\n    }\r\n\r\n    // Handle change\r\n    this.input.addEventListener('change', function () {\r\n      this.dispatchEvent({ type: 'check', checked: this.input.checked, value: this.input.value });\r\n    }.bind(this));\r\n\r\n  }\r\n  isChecked() {\r\n    return this.input.checked;\r\n  }\r\n}\r\n\r\nexport default ol_ext_input_Checkbox\r\n","import ol_ext_input_Checkbox from './Checkbox.js'\r\n\r\n/** Switch input\r\n * @constructor\r\n * @extends {ol_ext_input_Checkbox}\r\n * @fires check\r\n * @param {*} options\r\n *  @param {string} [options.className]\r\n *  @param {Element} [options.input] input element, if non create one\r\n *  @param {Element} [options.parent] parent element, if create an input\r\n */\r\nvar ol_ext_input_Switch = class olextinputSwitch extends ol_ext_input_Checkbox {\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    super(options);\r\n\r\n    this.element.className = ('ol-ext-toggle-switch ' + (options.className || '')).trim();\r\n  }\r\n};\r\n  \r\nexport default ol_ext_input_Switch\r\n","import ol_ext_input_Checkbox from './Checkbox.js'\r\n\r\n/** Switch input\r\n * @constructor\r\n * @extends {ol_ext_input_Checkbox}\r\n * @fires check\r\n * @param {*} options\r\n *  @param {string} [options.className]\r\n *  @param {Element} [options.input] input element, if non create one\r\n *  @param {Element} [options.parent] parent element, if create an input\r\n */\r\nvar ol_ext_input_Radio = class olextinputRadio extends ol_ext_input_Checkbox {\r\n  constructor(options) {\r\n    options = options || {};\r\n\r\n    super(options);\r\n\r\n    this.element.className = ('ol-ext-check ol-ext-radio ' + (options.className || '')).trim();\r\n  }\r\n}\r\n  \r\nexport default ol_ext_input_Radio\r\n","/** Vanilla JS helper to manipulate DOM without jQuery\r\n * @see https://github.com/nefe/You-Dont-Need-jQuery\r\n * @see https://plainjs.com/javascript/\r\n * @see http://youmightnotneedjquery.com/\r\n */\r\nimport ol_ext_input_Checkbox from './input/Checkbox.js'\r\nimport ol_ext_input_Switch from './input/Switch.js'\r\nimport ol_ext_input_Radio from './input/Radio.js'\r\n\r\n/** @namespace ol.ext.element */\r\nvar ol_ext_element = {};\r\n\r\n/**\r\n * Create an element\r\n * @param {string} tagName The element tag, use 'TEXT' to create a text node\r\n * @param {*} options\r\n *  @param {string} options.className className The element class name \r\n *  @param {Element} options.parent Parent to append the element as child\r\n *  @param {Element|string} [options.html] Content of the element (if text is not set)\r\n *  @param {string} [options.text] Text content (if html is not set)\r\n *  @param {Element|string} [options.options] when tagName = SELECT a list of options as key:value to add to the select\r\n *  @param {string} options.* Any other attribut to add to the element\r\n */\r\nol_ext_element.create = function (tagName, options) {\r\n  options = options || {};\r\n  var elt;\r\n  // Create text node\r\n  if (tagName === 'TEXT') {\r\n    elt = document.createTextNode(options.html||'');\r\n    if (options.parent) options.parent.appendChild(elt);\r\n  } else {\r\n    // Other element\r\n    elt = document.createElement(tagName);\r\n    if (/button/i.test(tagName)) elt.setAttribute('type', 'button');\r\n    for (var attr in options) {\r\n      switch (attr) {\r\n        case 'className': {\r\n          if (options.className && options.className.trim) elt.setAttribute('class', options.className.trim());\r\n          break;\r\n        }\r\n        case 'text': {\r\n          elt.innerText = options.text;\r\n          break;\r\n        }\r\n        case 'html': {\r\n          if (options.html instanceof Element) elt.appendChild(options.html)\r\n          else if (options.html!==undefined) elt.innerHTML = options.html;\r\n          break;\r\n        }\r\n        case 'parent': {\r\n          if (options.parent) options.parent.appendChild(elt);\r\n          break;\r\n        }\r\n        case 'options': {\r\n          if (/select/i.test(tagName)) {\r\n            for (var i in options.options) {\r\n              ol_ext_element.create('OPTION', {\r\n                html: i,\r\n                value: options.options[i],\r\n                parent: elt          \r\n              })\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 'style': {\r\n          ol_ext_element.setStyle(elt, options.style);\r\n          break;\r\n        }\r\n        case 'change':\r\n        case 'click': {\r\n          ol_ext_element.addListener(elt, attr, options[attr]);\r\n          break;\r\n        }\r\n        case 'on': {\r\n          for (var e in options.on) {\r\n            ol_ext_element.addListener(elt, e, options.on[e]);\r\n          }\r\n          break;\r\n        }\r\n        case 'checked': {\r\n          elt.checked = !!options.checked;\r\n          break;\r\n        }\r\n        default: {\r\n          elt.setAttribute(attr, options[attr]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return elt;\r\n};\r\n\r\n/** Create a toggle switch input\r\n * @param {*} options\r\n *  @param {string|Element} options.html\r\n *  @param {string|Element} options.after\r\n *  @param {boolean} options.checked\r\n *  @param {*} [options.on] a list of actions\r\n *  @param {function} [options.click]\r\n *  @param {function} [options.change]\r\n *  @param {Element} options.parent\r\n */\r\nol_ext_element.createSwitch = function (options) {\r\n  var input = ol_ext_element.create('INPUT', {\r\n    type: 'checkbox',\r\n    on: options.on,\r\n    click: options.click,\r\n    change: options.change,\r\n    parent: options.parent\r\n  });\r\n  var opt = Object.assign ({ input: input }, options || {});\r\n  new ol_ext_input_Switch(opt);\r\n  return input;\r\n};\r\n\r\n/** Create a toggle switch input\r\n * @param {*} options\r\n *  @param {string|Element} options.html\r\n *  @param {string|Element} options.after\r\n *  @param {string} [options.name] input name\r\n *  @param {string} [options.type=checkbox] input type: radio or checkbox\r\n *  @param {string} options.value input value\r\n *  @param {*} [options.on] a list of actions\r\n *  @param {function} [options.click]\r\n *  @param {function} [options.change]\r\n *  @param {Element} options.parent\r\n */\r\nol_ext_element.createCheck = function (options) {\r\n  var input = ol_ext_element.create('INPUT', {\r\n    name: options.name,\r\n    type: (options.type==='radio' ? 'radio' : 'checkbox'),\r\n    on: options.on,\r\n    parent: options.parent\r\n  });\r\n  var opt = Object.assign ({ input: input }, options || {});\r\n  if (options.type === 'radio') {\r\n    new ol_ext_input_Radio(opt);\r\n  } else {\r\n    new ol_ext_input_Checkbox(opt);\r\n  }\r\n  return input;\r\n};\r\n\r\n/** Set inner html or append a child element to an element\r\n * @param {Element} element\r\n * @param {Element|string} html Content of the element\r\n */\r\nol_ext_element.setHTML = function(element, html) {\r\n  if (html instanceof Element) element.appendChild(html)\r\n  else if (html!==undefined) element.innerHTML = html;\r\n};\r\n\r\n/** Append text into an elemnt\r\n * @param {Element} element\r\n * @param {string} text text content\r\n */\r\nol_ext_element.appendText = function(element, text) {\r\n  element.appendChild(document.createTextNode(text||''));\r\n};\r\n\r\n/**\r\n * Add a set of event listener to an element\r\n * @param {Element} element\r\n * @param {string|Array<string>} eventType\r\n * @param {function} fn\r\n */\r\nol_ext_element.addListener = function (element, eventType, fn, useCapture ) {\r\n  if (typeof eventType === 'string') eventType = eventType.split(' ');\r\n  eventType.forEach(function(e) {\r\n    element.addEventListener(e, fn, useCapture);\r\n  });\r\n};\r\n\r\n/**\r\n * Add a set of event listener to an element\r\n * @param {Element} element\r\n * @param {string|Array<string>} eventType\r\n * @param {function} fn\r\n */\r\nol_ext_element.removeListener = function (element, eventType, fn) {\r\n  if (typeof eventType === 'string') eventType = eventType.split(' ');\r\n  eventType.forEach(function(e) {\r\n    element.removeEventListener(e, fn);\r\n  });\r\n};\r\n\r\n/**\r\n * Show an element\r\n * @param {Element} element\r\n */\r\nol_ext_element.show = function (element) {\r\n  element.style.display = '';\r\n};\r\n\r\n/**\r\n * Hide an element\r\n * @param {Element} element\r\n */\r\nol_ext_element.hide = function (element) {\r\n  element.style.display = 'none';\r\n};\r\n\r\n/**\r\n * Test if an element is hihdden\r\n * @param {Element} element\r\n * @return {boolean}\r\n */\r\nol_ext_element.hidden = function (element) {\r\n  return ol_ext_element.getStyle(element, 'display') === 'none';\r\n};\r\n\r\n/**\r\n * Toggle an element\r\n * @param {Element} element\r\n */\r\nol_ext_element.toggle = function (element) {\r\n  element.style.display = (element.style.display==='none' ? '' : 'none');\r\n};\r\n\r\n/** Set style of an element\r\n * @param {DOMElement} el the element\r\n * @param {*} st list of style\r\n */\r\nol_ext_element.setStyle = function(el, st) {\r\n  for (var s in st) {\r\n    switch (s) {\r\n      case 'top':\r\n      case 'left':\r\n      case 'bottom':\r\n      case 'right':\r\n      case 'minWidth':\r\n      case 'maxWidth':\r\n      case 'width':\r\n      case 'height': {\r\n        if (typeof(st[s]) === 'number') {\r\n          el.style[s] = st[s]+'px';\r\n        } else {\r\n          el.style[s] = st[s];\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        el.style[s] = st[s];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Get style propertie of an element\r\n * @param {DOMElement} el the element\r\n * @param {string} styleProp Propertie name\r\n * @return {*} style value\r\n */\r\nol_ext_element.getStyle = function(el, styleProp) {\r\n  var value, defaultView = (el.ownerDocument || document).defaultView;\r\n  // W3C standard way:\r\n  if (defaultView && defaultView.getComputedStyle) {\r\n    // sanitize property name to css notation\r\n    // (hypen separated words eg. font-Size)\r\n    styleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n    value = defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\r\n  } else if (el.currentStyle) { // IE\r\n    // sanitize property name to camelCase\r\n    styleProp = styleProp.replace(/-(\\w)/g, function(str, letter) {\r\n      return letter.toUpperCase();\r\n    });\r\n    value = el.currentStyle[styleProp];\r\n    // convert other units to pixels on IE\r\n    if (/^\\d+(em|pt|%|ex)?$/i.test(value)) { \r\n      return (function(value) {\r\n        var oldLeft = el.style.left, oldRsLeft = el.runtimeStyle.left;\r\n        el.runtimeStyle.left = el.currentStyle.left;\r\n        el.style.left = value || 0;\r\n        value = el.style.pixelLeft + \"px\";\r\n        el.style.left = oldLeft;\r\n        el.runtimeStyle.left = oldRsLeft;\r\n        return value;\r\n      })(value);\r\n    }\r\n  }\r\n  if (/px$/.test(value)) return parseInt(value);\r\n  return value;\r\n};\r\n\r\n/** Get outerHeight of an elemen\r\n * @param {DOMElement} elt\r\n * @return {number}\r\n */\r\nol_ext_element.outerHeight = function(elt) {\r\n  return elt.offsetHeight + ol_ext_element.getStyle(elt, 'marginBottom')\r\n};\r\n\r\n/** Get outerWidth of an elemen\r\n * @param {DOMElement} elt\r\n * @return {number}\r\n */\r\nol_ext_element.outerWidth = function(elt) {\r\n  return elt.offsetWidth + ol_ext_element.getStyle(elt, 'marginLeft')\r\n};\r\n\r\n/** Get element offset rect\r\n * @param {DOMElement} elt\r\n * @return {*} \r\n */\r\nol_ext_element.offsetRect = function(elt) {\r\n  var rect = elt.getBoundingClientRect();\r\n  return {\r\n    top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\r\n    left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0),\r\n    height: rect.height || (rect.bottom - rect.top),\r\n    width: rect.width || (rect.right - rect.left)\r\n  }\r\n};\r\n\r\n/** Get element offset \r\n * @param {ELement} elt\r\n * @returns {Object} top/left offset\r\n */\r\nol_ext_element.getFixedOffset = function(elt) {\r\n  var offset = {\r\n    left:0,\r\n    top:0\r\n  };\r\n  var getOffset = function(parent) {\r\n    if (!parent) return offset;\r\n    // Check position when transform\r\n    if (ol_ext_element.getStyle(parent, 'position') === 'absolute'\r\n      && ol_ext_element.getStyle(parent, 'transform') !== \"none\") {\r\n      var r = parent.getBoundingClientRect();\r\n      offset.left += r.left; \r\n      offset.top += r.top; \r\n      return offset;\r\n    }\r\n    return getOffset(parent.offsetParent)\r\n  }\r\n  return getOffset(elt.offsetParent)\r\n};\r\n\r\n/** Get element offset rect\r\n * @param {DOMElement} elt\r\n * @param {boolean} fixed get fixed position\r\n * @return {Object} \r\n */\r\nol_ext_element.positionRect = function(elt, fixed) {\r\n  var gleft = 0;\r\n  var gtop = 0;\r\n\r\n  var getRect = function( parent ) {\r\n    if (parent) {\r\n      gleft += parent.offsetLeft;\r\n      gtop += parent.offsetTop;\r\n      return getRect(parent.offsetParent);\r\n    } else {\r\n      var r = {\r\n        top: elt.offsetTop + gtop,\r\n        left: elt.offsetLeft + gleft\r\n      };\r\n      if (fixed) {\r\n        r.top -= (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0);\r\n        r.left -= (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0);\r\n      }\r\n      r.bottom = r.top + elt.offsetHeight;\r\n      r.right = r.top + elt.offsetWidth;\r\n      return r;\r\n    }\r\n  }; \r\n  return getRect(elt.offsetParent);\r\n}\r\n\r\n/** Make a div scrollable without scrollbar.\r\n * On touch devices the default behavior is preserved\r\n * @param {DOMElement} elt\r\n * @param {*} options\r\n *  @param {function} [options.onmove] a function that takes a boolean indicating that the div is scrolling\r\n *  @param {boolean} [options.vertical=false] \r\n *  @param {boolean} [options.animate=true] add kinetic to scroll\r\n *  @param {boolean} [options.mousewheel=false] enable mousewheel to scroll\r\n *  @param {boolean} [options.minibar=false] add a mini scrollbar to the parent element (only vertical scrolling)\r\n * @returns {Object} an object with a refresh function\r\n */\r\nol_ext_element.scrollDiv = function(elt, options) {\r\n  options = options || {};\r\n  var pos = false;\r\n  var speed = 0;\r\n  var d, dt = 0;\r\n\r\n  var onmove = (typeof(options.onmove) === 'function' ? options.onmove : function(){});\r\n  //var page = options.vertical ? 'pageY' : 'pageX';\r\n  var page = options.vertical ? 'screenY' : 'screenX';\r\n  var scroll = options.vertical ? 'scrollTop' : 'scrollLeft';\r\n  var moving = false;\r\n  // Factor scale content / container\r\n  var scale, isbar;\r\n\r\n  // Update the minibar\r\n  var updateCounter = 0;\r\n  var updateMinibar = function() {\r\n    if (scrollbar) {\r\n      updateCounter++;\r\n      setTimeout(updateMinibarDelay);\r\n    }\r\n  }\r\n  var updateMinibarDelay = function() {\r\n    if (scrollbar) {\r\n      updateCounter--;\r\n      // Prevent multi call\r\n      if (updateCounter) return;\r\n      // Container height\r\n      var pheight = elt.clientHeight;\r\n      // Content height\r\n      var height = elt.scrollHeight;\r\n      // Set scrollbar value\r\n      scale = pheight / height;\r\n      scrollbar.style.height = scale * 100 + '%';\r\n      scrollbar.style.top = (elt.scrollTop / height * 100) + '%';\r\n      scrollContainer.style.height = pheight + 'px';\r\n      // No scroll\r\n      if (pheight > height - .5) scrollContainer.classList.add('ol-100pc');\r\n      else scrollContainer.classList.remove('ol-100pc');\r\n    }\r\n  }\r\n  \r\n  // Handle pointer down\r\n  var onPointerDown = function(e) {\r\n    // Prevent scroll\r\n    if (e.target.classList.contains('ol-noscroll')) return;\r\n    // Start scrolling\r\n    moving = false;\r\n    pos = e[page];\r\n    dt = new Date();\r\n    elt.classList.add('ol-move');\r\n    // Prevent elt dragging\r\n    e.preventDefault();\r\n    // Listen scroll\r\n    window.addEventListener('pointermove', onPointerMove);\r\n    ol_ext_element.addListener(window, ['pointerup','pointercancel'], onPointerUp);\r\n  }\r\n\r\n  // Register scroll\r\n  var onPointerMove = function(e) {\r\n    if (pos !== false) {\r\n      var delta = (isbar ? -1/scale : 1) * (pos - e[page]);\r\n      moving = moving || Math.round(delta)\r\n      elt[scroll] += delta;\r\n      d = new Date();\r\n      if (d-dt) {\r\n        speed = (speed + delta / (d - dt))/2;\r\n      }\r\n      pos = e[page];\r\n      dt = d;\r\n      // Tell we are moving\r\n      if (delta) onmove(true);\r\n    } else {\r\n      moving = true;\r\n    }\r\n  };\r\n  \r\n  // Animate scroll\r\n  var animate = function(to) {\r\n    var step = (to>0) ? Math.min(100, to/2) : Math.max(-100, to/2);\r\n    to -= step;\r\n    elt[scroll] += step;\r\n    if (-1 < to && to < 1) {\r\n      if (moving) setTimeout(function() { elt.classList.remove('ol-move'); });\r\n      else elt.classList.remove('ol-move');\r\n      moving = false;\r\n      onmove(false);\r\n    } else {\r\n      setTimeout(function() {\r\n        animate(to);\r\n      }, 40);\r\n    }\r\n  }\r\n  \r\n  // Initialize scroll container for minibar\r\n  var scrollContainer, scrollbar;\r\n  if (options.vertical && options.minibar) {\r\n    var init = function(b) {\r\n      // only once\r\n      elt.removeEventListener('pointermove', init);\r\n      elt.parentNode.classList.add('ol-miniscroll');\r\n      scrollbar = ol_ext_element.create('DIV');\r\n      scrollContainer = ol_ext_element.create('DIV', {\r\n        className: 'ol-scroll',\r\n        html: scrollbar\r\n      });\r\n      elt.parentNode.insertBefore(scrollContainer, elt);\r\n      // Move scrollbar\r\n      scrollbar.addEventListener('pointerdown', function(e) {\r\n        isbar = true;\r\n        onPointerDown(e)\r\n      });\r\n      // Handle mousewheel\r\n      if (options.mousewheel) {\r\n        ol_ext_element.addListener(scrollContainer, \r\n          ['mousewheel', 'DOMMouseScroll', 'onmousewheel'], \r\n          function(e) { onMouseWheel(e) }\r\n        );\r\n        ol_ext_element.addListener(scrollbar, \r\n          ['mousewheel', 'DOMMouseScroll', 'onmousewheel'], \r\n          function(e) { onMouseWheel(e) }\r\n        );\r\n      }\r\n      // Update on enter\r\n      elt.parentNode.addEventListener('pointerenter', updateMinibar);\r\n      // Update on resize\r\n      window.addEventListener('resize', updateMinibar);\r\n      // Update\r\n      if (b!==false) updateMinibar();\r\n    };\r\n    // Allready inserted in the DOM\r\n    if (elt.parentNode) init(false);\r\n    // or wait when ready\r\n    else elt.addEventListener('pointermove', init);\r\n    // Update on scroll\r\n    elt.addEventListener('scroll', function() {\r\n      updateMinibar();\r\n    });\r\n  }\r\n\r\n  // Enable scroll\r\n  elt.style['touch-action'] = 'none';\r\n  elt.style['overflow'] = 'hidden';\r\n  elt.classList.add('ol-scrolldiv');\r\n  \r\n  // Start scrolling\r\n  ol_ext_element.addListener(elt, ['pointerdown'], function(e) {\r\n    isbar = false;\r\n    onPointerDown(e)\r\n  });\r\n\r\n  // Prevet click when moving...\r\n  elt.addEventListener('click', function(e) {\r\n    if (elt.classList.contains('ol-move')) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }, true);\r\n\r\n  // Stop scrolling\r\n  var onPointerUp = function(e) {\r\n    dt = new Date() - dt;\r\n    if (dt>100 || isbar) {\r\n      // User stop: no speed\r\n      speed = 0;\r\n    } else if (dt>0) {\r\n      // Calculate new speed\r\n      speed = ((speed||0) + (pos - e[page]) / dt) / 2;\r\n    }\r\n    animate(options.animate===false ? 0 : speed*200);\r\n    pos = false;\r\n    speed = 0;\r\n    dt = 0;\r\n    // Add class to handle click (on iframe / double-click)\r\n    if (!elt.classList.contains('ol-move')) {\r\n      elt.classList.add('ol-hasClick')\r\n      setTimeout(function() { elt.classList.remove('ol-hasClick'); }, 500);\r\n    } else {\r\n      elt.classList.remove('ol-hasClick');\r\n    }\r\n    isbar = false;\r\n    window.removeEventListener('pointermove', onPointerMove)\r\n    ol_ext_element.removeListener(window, ['pointerup','pointercancel'], onPointerUp);\r\n  };\r\n\r\n  // Handle mousewheel\r\n  var onMouseWheel = function(e) {\r\n    var delta = Math.max(-1, Math.min(1, (e.wheelDelta || -e.detail)));\r\n    elt.classList.add('ol-move');\r\n    elt[scroll] -= delta*30;\r\n    elt.classList.remove('ol-move');\r\n    return false;\r\n  }\r\n  if (options.mousewheel) { // && !elt.classList.contains('ol-touch')) {\r\n    ol_ext_element.addListener(elt, \r\n      ['mousewheel', 'DOMMouseScroll', 'onmousewheel'], \r\n      onMouseWheel\r\n    );\r\n  }\r\n\r\n  return { \r\n    refresh: updateMinibar\r\n  }\r\n};\r\n\r\n/** Dispatch an event to an Element \r\n * @param {string} eventName\r\n * @param {Element} element\r\n */\r\nol_ext_element.dispatchEvent = function (eventName, element) {\r\n  var event;\r\n  try {\r\n    event = new CustomEvent(eventName);\r\n  } catch(e) {\r\n    // Try customevent on IE\r\n    event = document.createEvent(\"CustomEvent\");\r\n    event.initCustomEvent(eventName, true, true, {});\r\n  }\r\n  element.dispatchEvent(event);\r\n};\r\n\r\nexport default ol_ext_element\r\n","/* See \r\nhttps://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Matrix_math_for_the_web\r\nhttps://evanw.github.io/lightgl.js/docs/matrix.html \r\nhttps://github.com/jlmakes/rematrix\r\nhttps://jsfiddle.net/2znLxda2/\r\n*/\r\n/** Matrix3D; a set of functions to handle matrix3D\r\n */\r\nvar ol_matrix3D = {};\r\n\r\n/** Get transform matrix3D of an element\r\n * @param {Element} ele\r\n * @return {Array<Array<number>>}\r\n */\r\nol_matrix3D.getTransform = function(ele) {\r\n  var style = window.getComputedStyle(ele, null);\r\n  \r\n  var tr = style.getPropertyValue(\"-webkit-transform\") \r\n    || style.getPropertyValue(\"-moz-transform\") \r\n    || style.getPropertyValue(\"-ms-transform\") \r\n    || style.getPropertyValue(\"-o-transform\") \r\n    || style.getPropertyValue(\"transform\");\r\n    \r\n  var values = tr.split('(')[1].split(')')[0].split(',');\r\n\r\n  var mx = [ [1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1] ];    \r\n  var i, j;\r\n  if (values.length === 16) {\r\n    for (i = 0; i < 4; ++i) {\r\n      for (j = 0; j < 4; ++j) {\r\n        mx[j][i] = +values[i * 4 + j];\r\n      }\r\n    }\r\n  } else {\r\n    for (i = 0; i < 3; ++i) {\r\n      for (j = 0; j < 2; ++j) {\r\n        mx[j][i] = +values[i * 2 + j];\r\n      }\r\n    }\r\n  }\r\n  \r\n  return mx;\r\n};\r\n\r\n/** Get transform matrix3D of an element\r\n * @param {Element} ele\r\n * @return {Array<number>}\r\n */\r\nol_matrix3D.getTransformOrigin = function (ele) {\r\n  var style = window.getComputedStyle(ele, null);\r\n    \r\n  var tr = style.getPropertyValue(\"-webkit-transform-origin\") \r\n    || style.getPropertyValue(\"-moz-transform-origin\") \r\n    || style.getPropertyValue(\"-ms-transform-origin\") \r\n    || style.getPropertyValue(\"-o-transform-origin\") \r\n    || style.getPropertyValue(\"transform-origin\");\r\n  \r\n  var values = tr.split(' ');\r\n  \r\n  var mx = [ 0, 0, 0, 1 ];\r\n  for (var i = 0; i < values.length; ++i) {\r\n    mx[i] = parseInt(values[i]);\r\n  }\r\n  return mx;\r\n};\r\n\r\n/** Compute translate matrix\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} z\r\n * @return {Array<Array<number>>}\r\n */\r\nol_matrix3D.translateMatrix = function(x, y, z) {\r\n  return [\r\n    [1, 0, 0, x],\r\n    [0, 1, 0, y],\r\n    [0, 0, 1, z],\r\n    [0, 0, 0, 1]\r\n  ];\r\n};\r\n\r\n/** Identity matrix\r\n * @return {Array<Array<number>>}\r\n */\r\nol_matrix3D.identity = function() {\r\n  return [\r\n    [1, 0, 0, 0],\r\n    [0, 1, 0, 0],\r\n    [0, 0, 1, 0],\r\n    [0, 0, 0, 1]\r\n  ];\r\n};\r\n\r\n/** Round matrix\r\n * @param {Array<Array<number>>} mx\r\n * @param {number} round Rounding value, default 1E-10\r\n */\r\nol_matrix3D.roundTo = function(mx, round) {\r\n  if (!round) round = 1E-10;\r\n  var m = [[],[],[],[]];\r\n  for (var i=0; i<4; i++) {\r\n    for (var j=0; j<4; j++) {\r\n      m[i][j] = Math.round(mx[i][j] / round) * round;\r\n    }\r\n  }\r\n  return m;\r\n};\r\n\r\n/** Multiply matrix3D \r\n * @param {Array<Array<number>>} mx1\r\n * @param {Array<Array<number>>} mx2\r\n * @return {Array<Array<number>>} \r\n */\r\nol_matrix3D.multiply = function (mx1, mx2) {\r\n  var mx = [ [], [], [], [] ];\r\n  \r\n  for (var i = 0; i < 4; ++i) {\r\n    for (var j = 0; j < 4; ++j) {\r\n      var sum = 0;\r\n      for (var k = 0; k < 4; ++k) {\r\n          sum += (mx1[k][i] * mx2[j][k]);\r\n      }\r\n      mx[j][i] = sum;\r\n    }\r\n  }\r\n  \r\n  return mx;\r\n};\r\n\r\n/** Compute the full transform that is applied to the transformed parent: -origin o tx o origin\r\n * @param {Array<Array<number>>} tx transform matrix\r\n * @param {Array<Array<number>>} origin transform origin\r\n * @return {Array<Array<number>>} \r\n */\r\nol_matrix3D.computeTransformMatrix = function(tx, origin) {\r\n  var preTx = ol_matrix3D.translateMatrix(-origin[0], -origin[1], -origin[2]);\r\n  var postTx = ol_matrix3D.translateMatrix(origin[0], origin[1], origin[2]);\r\n  \r\n  var temp1 = ol_matrix3D.multiply(preTx, tx);\r\n  \r\n  return ol_matrix3D.multiply(temp1, postTx);\r\n};\r\n\r\n/** Apply transform to a coordinate\r\n * @param {Array<Array<number>>} tx\r\n * @param {ol.pixel} px\r\n */\r\nol_matrix3D.transformVertex = function(tx, px) {\r\n  var vert = [px[0], px[1], 0, 1]\r\n  var mx = [ ];\r\n    \r\n  for (var i = 0; i < 4; ++i) {\r\n    mx[i] = 0;\r\n    for (var j = 0; j < 4; ++j) {\r\n      mx[i] += +tx[i][j] * vert[j];\r\n    }\r\n  }\r\n  \r\n  return mx;\r\n}\r\n\r\n/** Perform the homogeneous divide to apply perspective to the points (divide x,y,z by the w component).\r\n * @param {Array<number>} vert\r\n * @return {Array<number>}\r\n */\r\nol_matrix3D.projectVertex = function(vert) {\r\n  var out = [ ];\r\n  \r\n  for (var i = 0; i < 4; ++i) {\r\n    out[i] = vert[i] / vert[3];\r\n  }\r\n  \r\n  return out;\r\n};\r\n\r\n/** Inverse a matrix3D \r\n * @return {Array<Array<number>>} m matrix to transform\r\n * @return {Array<Array<number>>}\r\n */\r\nol_matrix3D.inverse = function(m) {\r\n  var s0 = m[0][0] * m[1][1] - m[1][0] * m[0][1]\r\n  var s1 = m[0][0] * m[1][2] - m[1][0] * m[0][2]\r\n  var s2 = m[0][0] * m[1][3] - m[1][0] * m[0][3]\r\n  var s3 = m[0][1] * m[1][2] - m[1][1] * m[0][2]\r\n  var s4 = m[0][1] * m[1][3] - m[1][1] * m[0][3]\r\n  var s5 = m[0][2] * m[1][3] - m[1][2] * m[0][3]\r\n\r\n  var c5 = m[2][2] * m[3][3] - m[3][2] * m[2][3]\r\n  var c4 = m[2][1] * m[3][3] - m[3][1] * m[2][3]\r\n  var c3 = m[2][1] * m[3][2] - m[3][1] * m[2][2]\r\n  var c2 = m[2][0] * m[3][3] - m[3][0] * m[2][3]\r\n  var c1 = m[2][0] * m[3][2] - m[3][0] * m[2][2]\r\n  var c0 = m[2][0] * m[3][1] - m[3][0] * m[2][1]\r\n\r\n  var determinant = 1 / (s0 * c5 - s1 * c4 + s2 * c3 + s3 * c2 - s4 * c1 + s5 * c0)\r\n\r\n  if (isNaN(determinant) || determinant === Infinity) {\r\n    throw new Error('Inverse determinant attempted to divide by zero.')\r\n  }\r\n\r\n  return [\r\n    [\r\n      (m[1][1] * c5 - m[1][2] * c4 + m[1][3] * c3) * determinant,\r\n      (-m[0][1] * c5 + m[0][2] * c4 - m[0][3] * c3) * determinant,\r\n      (m[3][1] * s5 - m[3][2] * s4 + m[3][3] * s3) * determinant,\r\n      (-m[2][1] * s5 + m[2][2] * s4 - m[2][3] * s3) * determinant\r\n    ],[\r\n      (-m[1][0] * c5 + m[1][2] * c2 - m[1][3] * c1) * determinant,\r\n      (m[0][0] * c5 - m[0][2] * c2 + m[0][3] * c1) * determinant,\r\n      (-m[3][0] * s5 + m[3][2] * s2 - m[3][3] * s1) * determinant,\r\n      (m[2][0] * s5 - m[2][2] * s2 + m[2][3] * s1) * determinant\r\n    ],[\r\n      (m[1][0] * c4 - m[1][1] * c2 + m[1][3] * c0) * determinant,\r\n      (-m[0][0] * c4 + m[0][1] * c2 - m[0][3] * c0) * determinant,\r\n      (m[3][0] * s4 - m[3][1] * s2 + m[3][3] * s0) * determinant,\r\n      (-m[2][0] * s4 + m[2][1] * s2 - m[2][3] * s0) * determinant\r\n    ],[\r\n      (-m[1][0] * c3 + m[1][1] * c1 - m[1][2] * c0) * determinant,\r\n      (m[0][0] * c3 - m[0][1] * c1 + m[0][2] * c0) * determinant,\r\n      (-m[3][0] * s3 + m[3][1] * s1 - m[3][2] * s0) * determinant,\r\n      (m[2][0] * s3 - m[2][1] * s1 + m[2][2] * s0) * determinant\r\n    ]\r\n  ]\r\n};\r\n\r\nexport default ol_matrix3D\r\n","/*\tCopyright (c) 2019 Jean-Marc VIGLINO,\r\n  released under the CeCILL-B license (French BSD license)\r\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\r\nimport ol_Map from 'ol/Map.js'\r\nimport ol_ext_element from '../util/element.js';\r\nimport ol_Overlay from 'ol/Overlay.js'\r\nimport { inAndOut as ol_easing_inAndOut } from 'ol/easing.js'\r\nimport ol_matrix3D from '../util/matrix3D.js'\r\nimport { altKeyOnly as ol_events_condition_altKeyOnly } from 'ol/events/condition.js'\r\n\r\n/** A map with a perspective\r\n * @constructor \r\n * @extends {ol.Map}\r\n * @fires change:perspective\r\n * @param {olx.MapOptions=} options \r\n *  @param {ol.events.condition} tiltCondition , default altKeyOnly\r\n */\r\nvar ol_PerspectiveMap = class olPerspectiveMap extends ol_Map {\r\n  constructor(options) {\r\n\r\n    // Map div\r\n    var divMap = options.target instanceof Element ? options.target : document.getElementById(options.target);\r\n    if (window.getComputedStyle(divMap).position !== 'absolute') {\r\n      divMap.style.position = 'relative';\r\n    }\r\n    divMap.style.overflow = 'hidden';\r\n\r\n    // Create map inside\r\n    var map = ol_ext_element.create('DIV', {\r\n      className: 'ol-perspective-map',\r\n      parent: divMap\r\n    });\r\n    var opts = {};\r\n    Object.assign(opts, options);\r\n    opts.target = map;\r\n    // enhance pixel ratio\r\n    //opts.pixelRatio = 2;\r\n    super(opts);\r\n\r\n    this._tiltCondition = options.tiltCondition || ol_events_condition_altKeyOnly;\r\n\r\n  }\r\n  /** Get pixel ratio for the map\r\n   */\r\n  getPixelRatio() {\r\n    return window.devicePixelRatio;\r\n  }\r\n  /** Set perspective angle\r\n   * @param {number} angle the perspective angle 0 (vertical) - 30 (max), default 0\r\n   * @param {*} options\r\n   *  @param {number} options.duration The duration of the animation in milliseconds, default 500\r\n   *  @param {function} options.easing The easing function used during the animation, defaults to ol.easing.inAndOut).\r\n   */\r\n  setPerspective(angle, options) {\r\n    options = options || {};\r\n    // max angle\r\n    if (angle > 30)\r\n      angle = 30;\r\n    else if (angle < 0)\r\n      angle = 0;\r\n    var fromAngle = this._angle || 0;\r\n    var toAngle = Math.round(angle * 10) / 10;\r\n    var style = this.getTarget().querySelector('.ol-layers').style;\r\n    cancelAnimationFrame(this._animatedPerspective);\r\n    requestAnimationFrame(function (t) {\r\n      this._animatePerpective(t, t, style, fromAngle, toAngle, options.duration, options.easing || ol_easing_inAndOut);\r\n    }.bind(this));\r\n  }\r\n  /** Animate the perspective\r\n   * @param {number} t0 starting timestamp\r\n   * @param {number} t current timestamp\r\n   * @param {CSSStyleDeclaration} style style to modify\r\n   * @param {number} fromAngle starting angle\r\n   * @param {number} toAngle ending angle\r\n   * @param {number} duration The duration of the animation in milliseconds, default 500\r\n   * @param {function} easing The easing function used during the animation, defaults to ol.easing.inAndOut).\r\n   * @private\r\n   */\r\n  _animatePerpective(t0, t, style, fromAngle, toAngle, duration, easing) {\r\n    var dt, end;\r\n    if (duration === 0) {\r\n      dt = 1;\r\n      end = true;\r\n    } else {\r\n      dt = (t - t0) / (duration || 500);\r\n      end = (dt >= 1);\r\n    }\r\n    dt = easing(dt);\r\n    var angle;\r\n    if (end) {\r\n      angle = this._angle = toAngle;\r\n    } else {\r\n      angle = this._angle = fromAngle + (toAngle - fromAngle) * dt;\r\n    }\r\n    var fac = angle / 30;\r\n    // apply transform to the style\r\n    style.transform = 'translateY(-' + (17 * fac) + '%) perspective(200px) rotateX(' + angle + 'deg) scaleY(' + (1 - fac / 2) + ')';\r\n    this.getMatrix3D(true);\r\n    this.render();\r\n    if (!end) {\r\n      requestAnimationFrame(function (t) {\r\n        this._animatePerpective(t0, t, style, fromAngle, toAngle, duration || 500, easing || ol_easing_inAndOut);\r\n      }.bind(this));\r\n    }\r\n    // Dispatch event\r\n    this.dispatchEvent({\r\n      type: 'change:perspective',\r\n      angle: angle,\r\n      animating: !end\r\n    });\r\n  }\r\n  /** Convert to pixel coord according to the perspective\r\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\r\n   */\r\n  handleMapBrowserEvent(e) {\r\n    e.pixel = [\r\n      e.originalEvent.offsetX / this.getPixelRatio(),\r\n      e.originalEvent.offsetY / this.getPixelRatio()\r\n    ];\r\n    e.coordinate = this.getCoordinateFromPixel(e.pixel);\r\n    ol_Map.prototype.handleMapBrowserEvent.call(this, e);\r\n\r\n    // Change perspective on tilt condition\r\n    if (this._tiltCondition(e)) {\r\n      switch (e.type) {\r\n        case 'pointerdown': {\r\n          this._dragging = e.originalEvent.offsetY;\r\n          break;\r\n        }\r\n        case 'pointerup': {\r\n          this._dragging = false;\r\n          break;\r\n        }\r\n        case 'pointerdrag': {\r\n          if (this._dragging !== false) {\r\n            var angle = e.originalEvent.offsetY > this._dragging ? .5 : -.5;\r\n            if (angle) {\r\n              this.setPerspective((this._angle || 0) + angle, { duration: 0 });\r\n            }\r\n            this._dragging = e.originalEvent.offsetY;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      this._dragging = false;\r\n    }\r\n\r\n  }\r\n  /** Get map full teansform matrix3D\r\n   * @return {Array<Array<number>>}\r\n   */\r\n  getMatrix3D(compute) {\r\n    if (compute) {\r\n      var ele = this.getTarget().querySelector('.ol-layers');\r\n\r\n      // Get transform matrix3D from CSS\r\n      var tx = ol_matrix3D.getTransform(ele);\r\n\r\n      // Get the CSS transform origin from the transformed parent - default is '50% 50%'\r\n      var txOrigin = ol_matrix3D.getTransformOrigin(ele);\r\n\r\n      // Compute the full transform that is applied to the transformed parent (-origin * tx * origin)\r\n      this._matrixTransform = ol_matrix3D.computeTransformMatrix(tx, txOrigin);\r\n    }\r\n    if (!this._matrixTransform)\r\n      this._matrixTransform = ol_matrix3D.identity();\r\n    return this._matrixTransform;\r\n  }\r\n  /** Get pixel at screen from coordinate.\r\n   * The default getPixelFromCoordinate get pixel in the perspective.\r\n   * @param {ol.coordinate} coord\r\n   * @param {ol.pixel}\r\n   */\r\n  getPixelScreenFromCoordinate(coord) {\r\n    // Get pixel in the transform system\r\n    var px = this.getPixelFromCoordinate(coord);\r\n\r\n    // Get transform matrix3D from CSS\r\n    var fullTx = this.getMatrix3D();\r\n\r\n    // Transform the point using full transform\r\n    var pixel = ol_matrix3D.transformVertex(fullTx, px);\r\n    // Perform the homogeneous divide to apply perspective to the points (divide x,y,z by the w component).\r\n    pixel = ol_matrix3D.projectVertex(pixel);\r\n\r\n    return [pixel[0], pixel[1]];\r\n  }\r\n  /** Not working...\r\n   *\r\n   */\r\n  getPixelFromPixelScreen(px) {\r\n    // Get transform matrix3D from CSS\r\n    var fullTx = ol_matrix3D.inverse(this.getMatrix3D());\r\n\r\n    // Transform the point using full transform\r\n    var pixel = ol_matrix3D.transformVertex(fullTx, px);\r\n    // Perform the homogeneous divide to apply perspective to the points (divide x,y,z by the w component).\r\n    pixel = ol_matrix3D.projectVertex(pixel);\r\n\r\n    return [pixel[0], pixel[1]];\r\n  }\r\n}\r\n\r\n/* HACK: Overwrited Overlay function to handle overlay positing in a perspective map */\r\n;(function() {\r\nvar _updatePixelPosition = ol_Overlay.prototype.updatePixelPosition;\r\n\r\n/** Update pixel projection in a perspective map (apply projection to the position)\r\n * @private\r\n */\r\nol_Overlay.prototype.updatePixelPosition = function () {\r\n  var map = this.getMap();\r\n  if (map && map instanceof ol_PerspectiveMap) {\r\n    var position = this.getPosition();\r\n    if (!map || !map.isRendered() || !position) {\r\n      this.setVisible(false);\r\n      return;\r\n    }\r\n    // Get pixel at screen\r\n    \r\n    var pixel = map.getPixelScreenFromCoordinate(position);\r\n    var mapSize = map.getSize();\r\n    pixel[0] -= mapSize[0]/4\r\n    pixel[1] -= mapSize[1]/4\r\n    /* for ol v6.2.x\r\n    // Offset according positioning\r\n    var pos = this.getPositioning();\r\n    if (/bottom/.test(pos)) {\r\n      pixel[1] += mapSize[1]/4\r\n    } else {\r\n      pixel[1] -= mapSize[1]/4\r\n    }\r\n    if (/right/.test(pos)) {\r\n      pixel[0] += mapSize[0]/4\r\n    } else {\r\n      pixel[0] -= mapSize[0]/4\r\n    }\r\n    */\r\n    // Update\r\n    this.updateRenderedPosition(pixel , mapSize);\r\n  } else {\r\n    _updatePixelPosition.call(this);\r\n  }\r\n};\r\n/**/\r\n\r\n})();\r\n\r\nexport default ol_PerspectiveMap\r\n","import { Tile, Tile as TileLayer, Vector, Vector as VectorLayer } from 'ol/layer.js'\r\nimport XYZ from 'ol/source/XYZ' // 引入XYZ地圖格式\r\nimport OSM from 'ol/source/OSM'\r\nconst key = 'Gu2rcfenfMEKjKXgPF6H'\r\n\r\nvar configBaseMap = [\r\n    {\r\n        name: \"default\",\r\n        label: '預設',\r\n        urls: new OSM(),\r\n        crossOrigin: 'anonymous'\r\n    },\r\n    {\r\n        name: 'roads',\r\n        label: '底圖一',\r\n        urls: new XYZ({\r\n            url: 'https://api.maptiler.com/maps/streets/{z}/{x}/{y}.png?key=' + key,\r\n            tileSize: 512,\r\n            maxZoom: 22,\r\n            crossOrigin: 'anonymous'\r\n        }),\r\n    },\r\n    {\r\n        name: 'imagery',\r\n        label: '底圖二',\r\n        urls: new XYZ({\r\n            url: 'https://api.maptiler.com/tiles/satellite/{z}/{x}/{y}.jpg?key=' + key,\r\n            maxZoom: 20,\r\n            crossOrigin: 'anonymous'\r\n        }),\r\n    },\r\n]\r\nexport default {\r\n    sourceFun: (val, itemKey, itemValue) => {\r\n        let mapSource = configBaseMap.find(node=> node.name == val)\r\n        let vector = {\r\n            preload: Infinity,\r\n            name: mapSource.name,\r\n            label: mapSource.label,\r\n            source: mapSource.urls,\r\n            crossOrigin: 'anonymous',\r\n        }\r\n        if(itemValue) {\r\n            vector[itemKey] = itemValue\r\n        }\r\n        return new TileLayer(vector)\r\n    },\r\n    sourceData: ()=> {\r\n        return configBaseMap.map(node=>{\r\n            return {\r\n                'name': node.name,\r\n                'label': node.label\r\n            }\r\n        })\r\n    }\r\n}\r\n","/**\n * @module olcs.util\n */\nconst exports = {};\n\n\n/**\n * Cast to object.\n * @param {Object} param\n * @return {Object}\n */\nexports.obj = function(param) {\n  return param;\n};\n\n\n/**\n * @type {boolean|undefined}\n * @private\n */\nexports.supportsImageRenderingPixelatedResult_ = undefined;\n\n\n/**\n * @type {string|undefined}\n * @private\n */\nexports.imageRenderingValueResult_ = undefined;\n\n\n/**\n * @return {boolean}\n */\nexports.supportsImageRenderingPixelated = function() {\n  if (exports.supportsImageRenderingPixelatedResult_ === undefined) {\n    const canvas = document.createElement('canvas');\n    canvas.setAttribute('style', 'image-rendering: -moz-crisp-edges; image-rendering: pixelated;');\n    // canvas.style.imageRendering will be undefined, null or an\n    // empty string on unsupported browsers.\n    const tmp = canvas.style['imageRendering']; // non standard\n    exports.supportsImageRenderingPixelatedResult_ = !!tmp;\n    if (exports.supportsImageRenderingPixelatedResult_) {\n      exports.imageRenderingValueResult_ = tmp;\n    }\n  }\n  return exports.supportsImageRenderingPixelatedResult_;\n};\n\n\n/**\n * @return {string}\n */\nexports.imageRenderingValue = function() {\n  exports.supportsImageRenderingPixelated();\n  return exports.imageRenderingValueResult_ || '';\n};\n\n/**\n * Return the projection of the source that Cesium should use.\n *\n * @param {ol.source.Source} source Source.\n * @returns {ol.proj.Projection} The projection of the source.\n */\nexports.getSourceProjection = function(source) {\n  return /** @type {ol.proj.Projection} */ (source.get('olcs.projection'))\n    || source.getProjection();\n};\n\n/**\n * @param {ol.Observable} observable\n * @param {string} type\n * @param {Function} listener\n * @return {!ol.events.EventsKey}\n */\nexport function olcsListen(observable, type, listener) {\n  // See https://github.com/openlayers/openlayers/pull/8481\n  // ol.events.listen is internal so we use `on` instead.\n  // And since `on` as a convoluted API (can return an EventsKey or an array of them)\n  // we use a cast here.\n  return /** @type {!ol.events.EventsKey} */ (observable.on(type, listener));\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.olcs_uid || (obj.olcs_uid = ++uidCounter_);\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  for (let i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort((a, b) => compareFnc(a.value, b.value) || a.index - b.index);\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * @param {Cesium.Scene} scene The scene.\n */\nexport function isGroundPolylinePrimitiveSupported(scene) {\n  const obj = Cesium.GroundPolylinePrimitive;\n  return obj && obj.isSupported(scene);\n}\n\nexport default exports;\n","/**\n * @module olcs.core.OLImageryProvider\n */\nimport olcsUtil from '../util.js';\nimport {Tile as TileSource} from 'ol/source.js';\nimport {attributionsFunctionToCredits} from '../core.js';\n\n\nconst olUseNewCoordinates = (function() {\n  const tileSource = new TileSource({\n    projection: 'EPSG:3857',\n    wrapX: true\n  });\n  const tileCoord = tileSource.getTileCoordForTileUrlFunction([6, -31, 22]);\n  return tileCoord && tileCoord[1] === 33 && tileCoord[2] === 22;\n  // See b/test/spec/ol/source/tile.test.js\n  // of e9a30c5cb7e3721d9370025fbe5472c322847b35 in OpenLayers repository\n})();\n\n\nclass OLImageryProvider /* should not extend Cesium.ImageryProvider */ {\n  /**\n   * Special class derived from Cesium.ImageryProvider\n   * that is connected to the given ol.source.TileImage.\n   * @param {!ol.Map} olMap\n   * @param {!ol.source.TileImage} source\n   * @param {ol.proj.Projection=} opt_fallbackProj Projection to assume if the\n   *                                               projection of the source is not defined.\n   * @constructor\n   * @extends {Cesium.ImageryProvider}\n   */\n  constructor(olMap, source, opt_fallbackProj) {\n    // Do not extend or call super constructor from\n    // Cesium.ImageryProvider since this particular function is a\n    // 'non instanciable interface' which throws on instanciation.\n\n    /**\n     * @type {!ol.source.TileImage}\n     * @private\n     */\n    this.source_ = source;\n\n    /**\n     * @type {?ol.proj.Projection}\n     * @private\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {?ol.proj.Projection}\n     * @private\n     */\n    this.fallbackProj_ = opt_fallbackProj || null;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.ready_ = false;\n\n    /**\n     * @type {?Cesium.TilingScheme}\n     * @private\n     */\n    this.tilingScheme_ = null;\n\n    /**\n     * @type {?Cesium.Rectangle}\n     * @private\n     */\n    this.rectangle_ = null;\n\n    /**\n     * @type {!ol.Map}\n     * @private\n     */\n    this.map_ = olMap;\n\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldRequestNextLevel = false;\n\n    const proxy = this.source_.get('olcs.proxy');\n    if (proxy) {\n      if (typeof proxy === 'function') {\n        this.proxy_ = {\n          'getURL': proxy\n        };\n      } else if (typeof proxy === 'string') {\n        this.proxy_ = new Cesium.DefaultProxy(proxy);\n      }\n    }\n\n    this.errorEvent_ = new Cesium.Event();\n\n    this.emptyCanvas_ = document.createElement('canvas');\n    this.emptyCanvas_.width = 1;\n    this.emptyCanvas_.height = 1;\n\n    this.source_.on('change', (e) => {\n      this.handleSourceChanged_();\n    });\n    this.handleSourceChanged_();\n  }\n\n  /**\n   * Checks if the underlying source is ready and cached required data.\n   * @private\n   */\n  handleSourceChanged_(frameState) {\n    if (!this.ready_ && this.source_.getState() == 'ready') {\n      this.projection_ = olcsUtil.getSourceProjection(this.source_) || this.fallbackProj_;\n      const options = {numberOfLevelZeroTilesX: 1, numberOfLevelZeroTilesY: 1};\n\n      if (this.source_.tileGrid !== null) {\n        // Get the number of tiles at level 0 if it is defined\n        this.source_.tileGrid.forEachTileCoord(this.projection_.getExtent(), 0, ([zoom, xIndex, yIndex]) => {\n          options.numberOfLevelZeroTilesX = xIndex + 1;\n          options.numberOfLevelZeroTilesY = yIndex + 1;\n        });\n      }\n\n      if (this.projection_.getCode() === 'EPSG:4326') {\n        // Cesium zoom level 0 is OpenLayers zoom level 1 for layer in EPSG:4326 with a single tile on level 0\n        this.shouldRequestNextLevel = options.numberOfLevelZeroTilesX === 1 && options.numberOfLevelZeroTilesY === 1;\n        this.tilingScheme_ = new Cesium.GeographicTilingScheme(options);\n      } else if (this.projection_.getCode() === 'EPSG:3857') {\n        this.shouldRequestNextLevel = false;\n        this.tilingScheme_ = new Cesium.WebMercatorTilingScheme(options);\n      } else {\n        return;\n      }\n      this.rectangle_ = this.tilingScheme_.rectangle;\n\n      this.ready_ = true;\n    }\n  }\n\n  /**\n   * Generates the proper attributions for a given position and zoom\n   * level.\n   * @export\n   * @override\n   */\n  getTileCredits(x, y, level) {\n    const attributionsFunction = this.source_.getAttributions();\n    if (!attributionsFunction) {\n      return [];\n    }\n    const extent = this.map_.getView().calculateExtent(this.map_.getSize());\n    const center = this.map_.getView().getCenter();\n    const zoom = this.shouldRequestNextLevel ? level + 1 : level;\n    return attributionsFunctionToCredits(attributionsFunction, zoom, center, extent);\n  }\n\n  /**\n   * @export\n   * @override\n   */\n  requestImage(x, y, level) {\n    const tileUrlFunction = this.source_.getTileUrlFunction();\n    if (tileUrlFunction && this.projection_) {\n\n      const z_ = this.shouldRequestNextLevel ? level + 1 : level;\n\n      let y_ = y;\n      if (!olUseNewCoordinates) {\n        // OpenLayers version 3 to 5 tile coordinates increase from bottom to top\n        y_ = -y - 1;\n      }\n      let url = tileUrlFunction.call(this.source_, [z_, x, y_], 1, this.projection_);\n      if (this.proxy_) {\n        url = this.proxy_.getURL(url);\n      }\n      return url ? Cesium.ImageryProvider.loadImage(this, url) : this.emptyCanvas_;\n    } else {\n      // return empty canvas to stop Cesium from retrying later\n      return this.emptyCanvas_;\n    }\n  }\n}\n\n// definitions of getters that are required to be present\n// in the Cesium.ImageryProvider instance:\nObject.defineProperties(OLImageryProvider.prototype, {\n  'ready': {\n    'get': /** @this {olcs.core.OLImageryProvider} */\n        function() {return this.ready_;}\n  },\n\n  'rectangle': {\n    'get': /** @this {olcs.core.OLImageryProvider} */\n        function() {return this.rectangle_;}\n  },\n\n  'tileWidth': {\n    'get': /** @this {olcs.core.OLImageryProvider} */\n        function() {\n          const tg = this.source_.getTileGrid();\n          return tg ? (Array.isArray(tg.getTileSize(0)) ? tg.getTileSize(0)[0] : tg.getTileSize(0)) : 256;\n        }\n  },\n\n  'tileHeight': {\n    'get': /** @this {olcs.core.OLImageryProvider} */\n        function() {\n          const tg = this.source_.getTileGrid();\n          return tg ? (Array.isArray(tg.getTileSize(0)) ? tg.getTileSize(0)[1] : tg.getTileSize(0)) : 256;\n        }\n  },\n\n  'maximumLevel': {\n    'get': /** @this {olcs.core.OLImageryProvider} */\n        function() {\n          const tg = this.source_.getTileGrid();\n          return tg ? tg.getMaxZoom() : 18;\n        }\n  },\n\n  'minimumLevel': {\n    'get': /** @this {olcs.core.OLImageryProvider} */\n        function() {\n          // WARNING: Do not use the minimum level (at least until the extent is\n          // properly set). Cesium assumes the minimumLevel to contain only\n          // a few tiles and tries to load them all at once -- this can\n          // freeze and/or crash the browser !\n          return 0;\n          //var tg = this.source_.getTileGrid();\n          //return tg ? tg.getMinZoom() : 0;\n        }\n  },\n\n  'tilingScheme': {\n    'get': /** @this {olcs.core.OLImageryProvider} */\n        function() {return this.tilingScheme_;}\n  },\n\n  'tileDiscardPolicy': {\n    'get': function() {return undefined;}\n  },\n\n  'errorEvent': {\n    'get': /** @this {olcs.core.OLImageryProvider} */\n        function() {return this.errorEvent_;}\n  },\n\n  'proxy': {\n    'get': /** @this {olcs.core.OLImageryProvider} */\n        function() {return this.proxy_;}\n  },\n\n  'hasAlphaChannel': {\n    'get': function() {return true;}\n  },\n\n  'pickFeatures': {\n    'get': function() {return undefined;}\n  }\n});\n\n\nexport default OLImageryProvider;\n","import MVT from 'ol/format/MVT.js';\nimport Style from 'ol/style/Style.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport {toContext} from 'ol/render.js';\nimport {get as getProjection} from 'ol/proj.js';\nimport {VERSION as OL_VERSION} from 'ol/util.js';\nimport LRUCache from 'ol/structs/LRUCache.js';\nimport {getForProjection as getTilegridForProjection} from 'ol/tilegrid.js';\nimport {createFromTemplates as createTileUrlFunctions} from 'ol/tileurlfunction.js';\n\n\nconst format = new MVT();\nconst styles = [new Style({\n  stroke: new Stroke({\n    color: 'blue',\n    width: 2\n  })\n})];\n\n\nexport default class MVTImageryProvider {\n  constructor(options) {\n    this.urls = options.urls;\n    this.ready = true;\n    this.readyPromise = Promise.resolve(true);\n    this.tileWidth = 256;\n    this.tileHeight = 256;\n    this.maximumLevel = options.maximumLevel || 20;\n    this.minimumLevel = options.minimumLevel || 0;\n    this.tilingScheme = new Cesium.WebMercatorTilingScheme;\n    this.rectangle = options.rectangle || this.tilingScheme.rectangle;\n    this.errorEvent = new Cesium.Event();\n    this.credit = options.credit;\n    this.hasAlphaChannel = true;\n    this.styleFunction_ = options.styleFunction || (() => styles);\n    this.projection_ = getProjection('EPSG:3857');\n    this.emptyCanvas_ = document.createElement('canvas');\n    this.emptyCanvas_.width = 1;\n    this.emptyCanvas_.height = 1;\n    this.tileRectangle_ = new Cesium.Rectangle();\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 50;\n    this.tileCache = new LRUCache(cacheSize);\n    this.featureCache = options.featureCache || new LRUCache(cacheSize);\n    // to avoid too frequent cache grooming we allow x2 capacity\n\n    const tileGrid = getTilegridForProjection(this.projection_);\n    this.tileFunction_ = createTileUrlFunctions(this.urls, tileGrid);\n  }\n\n  getTileCredits() {\n    return [];\n  }\n\n  pickFeatures() {\n  }\n\n\n  getTileFeatures(z, x, y) {\n    const cacheKey = this.getCacheKey_(z, x, y);\n    let promise;\n    if (this.featureCache.containsKey(cacheKey)) {\n      promise = this.featureCache.get(cacheKey);\n    }\n    if (!promise) {\n      const url = this.getUrl_(z, x, y);\n      promise = fetch(url)\n          .then(r => (r.ok ? r : Promise.reject(r)))\n          .then(r => r.arrayBuffer())\n          .then(buffer => this.readFeaturesFromBuffer(buffer));\n      this.featureCache.set(cacheKey, promise);\n      if (this.featureCache.getCount() > 2 * this.featureCache.highWaterMark) {\n        while (this.featureCache.canExpireCache()) {\n          this.featureCache.pop();\n        }\n      }\n    }\n    return promise;\n  }\n\n  readFeaturesFromBuffer(buffer) {\n    let options;\n    if (OL_VERSION <= '6.4.4') {\n      // See https://github.com/openlayers/openlayers/pull/11540\n      options = {\n        extent: [0, 0, 4096, 4096],\n        dataProjection: format.dataProjection,\n        featureProjection: format.dataProjection\n      };\n    }\n    const features = format.readFeatures(buffer, options);\n    const scaleFactor = this.tileWidth / 4096;\n    features.forEach((f) => {\n      const flatCoordinates = f.getFlatCoordinates();\n      let flip = false;\n      for (let i = 0; i < flatCoordinates.length; ++i) {\n        flatCoordinates[i] *= scaleFactor;\n        if (flip) {\n          // FIXME: why do we need this now?\n          flatCoordinates[i] = this.tileWidth - flatCoordinates[i];\n        }\n        if (OL_VERSION <= '6.4.4') {\n          flip = !flip;\n        }\n      }\n    });\n\n    return features;\n  }\n\n  getUrl_(z, x, y) {\n    const url = this.tileFunction_([z, x, y]);\n    return url;\n  }\n\n  getCacheKey_(z, x, y) {\n    return `${z}_${x}_${y}`;\n  }\n\n  requestImage(x, y, z, request) {\n    if (z < this.minimumLevel) {\n      return this.emptyCanvas_;\n    }\n\n    try {\n      const cacheKey = this.getCacheKey_(z, x, y);\n      let promise;\n      if (this.tileCache.containsKey(cacheKey)) {\n        promise = this.tileCache.get(cacheKey);\n      }\n      if (!promise) {\n        promise = this.getTileFeatures(z, x, y)\n            .then((features) => {\n            // FIXME: here we suppose the 2D projection is in meters\n              this.tilingScheme.tileXYToNativeRectangle(x, y, z, this.tileRectangle_);\n              const resolution = (this.tileRectangle_.east - this.tileRectangle_.west) / this.tileWidth;\n              return this.rasterizeFeatures(features, this.styleFunction_, resolution);\n            });\n        this.tileCache.set(cacheKey, promise);\n        if (this.tileCache.getCount() > 2 * this.tileCache.highWaterMark) {\n          while (this.tileCache.canExpireCache()) {\n            this.tileCache.pop();\n          }\n        }\n      }\n      return promise;\n    } catch (e) {\n      console.trace(e);\n      this.raiseEvent('could not render pbf to tile', e);\n    }\n  }\n\n  rasterizeFeatures(features, styleFunction, resolution) {\n    const canvas = document.createElement('canvas');\n    const vectorContext = toContext(canvas.getContext('2d'), {size: [this.tileWidth, this.tileHeight]});\n    features.forEach((f) => {\n      const styles = styleFunction(f, resolution);\n      if (styles) {\n        styles.forEach((style) => {\n          vectorContext.setStyle(style);\n          vectorContext.drawGeometry(f);\n        });\n      }\n    });\n    return canvas;\n  }\n}\n","/**\n * @module olcs.core\n */\nimport {linear as linearEasing} from 'ol/easing.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport {get as getProjection, transformExtent} from 'ol/proj.js';\nimport olSourceImageStatic from 'ol/source/ImageStatic.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileImage from 'ol/source/TileImage.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceVectorTile from 'ol/source/VectorTile.js';\nimport {defaultImageLoadFunction} from 'ol/source/Image.js';\nimport olcsCoreOLImageryProvider from './core/OLImageryProvider.js';\nimport olcsUtil from './util.js';\nimport MVTImageryProvider from './MVTImageryProvider.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport {getCenter as getExtentCenter} from 'ol/extent';\n\nconst exports = {};\n\n\n/**\n * @typedef {Object} CesiumUrlDefinition\n * @property {string} url\n * @property {string} subdomains\n */\n\n\n/**\n * Options for rotate around axis core function.\n * @typedef {Object} RotateAroundAxisOption\n * @property {number} [duration]\n * @property {function(number): number} [easing]\n * @property {function(): void} [callback]\n */\n\n\n\n/**\n * @typedef {Object} LayerWithParents\n * @property {import('ol/layer/Base.js').default} layer\n * @property {Array<import('ol/layer/Group.js').default>} parents\n */\n\n\n/**\n * Compute the pixel width and height of a point in meters using the\n * camera frustum.\n * @param {!Cesium.Scene} scene\n * @param {!Cesium.Cartesian3} target\n * @return {!Cesium.Cartesian2} the pixel size\n * @api\n */\nexports.computePixelSizeAtCoordinate = function(scene, target) {\n  const camera = scene.camera;\n  const canvas = scene.canvas;\n  const frustum = camera.frustum;\n  const distance = Cesium.Cartesian3.magnitude(Cesium.Cartesian3.subtract(\n      camera.position, target, new Cesium.Cartesian3()));\n  return frustum.getPixelDimensions(canvas.clientWidth, canvas.clientHeight,\n      distance, scene.pixelRatio, new Cesium.Cartesian2());\n};\n\n\n/**\n * Compute bounding box around a target point.\n * @param {!Cesium.Scene} scene\n * @param {!Cesium.Cartesian3} target\n * @param {number} amount Half the side of the box, in pixels.\n * @return {Array<Cesium.Cartographic>} bottom left and top right\n * coordinates of the box\n */\nexports.computeBoundingBoxAtTarget = function(scene, target, amount) {\n  const pixelSize = exports.computePixelSizeAtCoordinate(scene, target);\n  const transform = Cesium.Transforms.eastNorthUpToFixedFrame(target);\n\n  const bottomLeft = Cesium.Matrix4.multiplyByPoint(\n      transform,\n      new Cesium.Cartesian3(-pixelSize.x * amount, -pixelSize.y * amount, 0),\n      new Cesium.Cartesian3());\n\n  const topRight = Cesium.Matrix4.multiplyByPoint(\n      transform,\n      new Cesium.Cartesian3(pixelSize.x * amount, pixelSize.y * amount, 0),\n      new Cesium.Cartesian3());\n\n  return Cesium.Ellipsoid.WGS84.cartesianArrayToCartographicArray(\n      [bottomLeft, topRight]);\n};\n\n\n/**\n *\n * @param {!ol.geom.Geometry} geometry\n * @param {number} height\n * @api\n */\nexports.applyHeightOffsetToGeometry = function(geometry, height) {\n  geometry.applyTransform((input, output, stride) => {\n    console.assert(input === output);\n    if (stride !== undefined && stride >= 3) {\n      for (let i = 0; i < output.length; i += stride) {\n        output[i + 2] = output[i + 2] + height;\n      }\n    }\n    return output;\n  });\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates\n * @param {number=} rotation\n * @param {!Cesium.Cartesian3=} translation\n * @param {!Cesium.Cartesian3=} scale\n * @return {!Cesium.Matrix4}\n * @api\n */\nexports.createMatrixAtCoordinates = function(coordinates, rotation = 0, translation = Cesium.Cartesian3.ZERO, scale = new Cesium.Cartesian3(1, 1, 1)) {\n  const position = exports.ol4326CoordinateToCesiumCartesian(coordinates);\n  const rawMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(position);\n  const quaternion = Cesium.Quaternion.fromAxisAngle(Cesium.Cartesian3.UNIT_Z, -rotation);\n  const rotationMatrix = Cesium.Matrix4.fromTranslationQuaternionRotationScale(translation, quaternion, scale);\n  return Cesium.Matrix4.multiply(rawMatrix, rotationMatrix, new Cesium.Matrix4());\n};\n\n\n/**\n * @param {!Cesium.Camera} camera\n * @param {number} angle\n * @param {!Cesium.Cartesian3} axis\n * @param {!Cesium.Matrix4} transform\n * @param {RotateAroundAxisOption=} opt_options\n * @api\n */\nexports.rotateAroundAxis = function(camera, angle, axis, transform,\n    opt_options) {\n  const clamp = Cesium.Math.clamp;\n  const defaultValue = Cesium.defaultValue;\n\n  const options = opt_options || {};\n  const duration = defaultValue(options.duration, 500); // ms\n  const easing = defaultValue(options.easing, linearEasing);\n  const callback = options.callback;\n\n  let lastProgress = 0;\n  const oldTransform = new Cesium.Matrix4();\n\n  const start = Date.now();\n  const step = function() {\n    const timestamp = Date.now();\n    const timeDifference = timestamp - start;\n    const progress = easing(clamp(timeDifference / duration, 0, 1));\n    console.assert(progress >= lastProgress);\n\n    camera.transform.clone(oldTransform);\n    const stepAngle = (progress - lastProgress) * angle;\n    lastProgress = progress;\n    camera.lookAtTransform(transform);\n    camera.rotate(axis, stepAngle);\n    camera.lookAtTransform(oldTransform);\n\n    if (progress < 1) {\n      window.requestAnimationFrame(step);\n    } else {\n      if (callback) {\n        callback();\n      }\n    }\n  };\n  window.requestAnimationFrame(step);\n};\n\n\n/**\n * @param {!Cesium.Scene} scene\n * @param {number} heading\n * @param {!Cesium.Cartesian3} bottomCenter\n * @param {RotateAroundAxisOption=} opt_options\n * @api\n */\nexports.setHeadingUsingBottomCenter = function(scene, heading,\n    bottomCenter, opt_options) {\n  const camera = scene.camera;\n  // Compute the camera position to zenith quaternion\n  const angleToZenith = exports.computeAngleToZenith(scene, bottomCenter);\n  const axis = camera.right;\n  const quaternion = Cesium.Quaternion.fromAxisAngle(axis, angleToZenith);\n  const rotation = Cesium.Matrix3.fromQuaternion(quaternion);\n\n  // Get the zenith point from the rotation of the position vector\n  const vector = new Cesium.Cartesian3();\n  Cesium.Cartesian3.subtract(camera.position, bottomCenter, vector);\n  const zenith = new Cesium.Cartesian3();\n  Cesium.Matrix3.multiplyByVector(rotation, vector, zenith);\n  Cesium.Cartesian3.add(zenith, bottomCenter, zenith);\n\n  // Actually rotate around the zenith normal\n  const transform = Cesium.Matrix4.fromTranslation(zenith);\n  const rotateAroundAxis = exports.rotateAroundAxis;\n  rotateAroundAxis(camera, heading, zenith, transform, opt_options);\n};\n\n\n/**\n * Get the 3D position of the given pixel of the canvas.\n * @param {!Cesium.Scene} scene\n * @param {!Cesium.Cartesian2} pixel\n * @return {!Cesium.Cartesian3|undefined}\n * @api\n */\nexports.pickOnTerrainOrEllipsoid = function(scene, pixel) {\n  const ray = scene.camera.getPickRay(pixel);\n  const target = scene.globe.pick(ray, scene);\n  return target || scene.camera.pickEllipsoid(pixel);\n};\n\n\n/**\n * Get the 3D position of the point at the bottom-center of the screen.\n * @param {!Cesium.Scene} scene\n * @return {!Cesium.Cartesian3|undefined}\n * @api\n */\nexports.pickBottomPoint = function(scene) {\n  const canvas = scene.canvas;\n  const bottom = new Cesium.Cartesian2(\n      canvas.clientWidth / 2, canvas.clientHeight);\n  return exports.pickOnTerrainOrEllipsoid(scene, bottom);\n};\n\n\n/**\n * Get the 3D position of the point at the center of the screen.\n * @param {!Cesium.Scene} scene\n * @return {!Cesium.Cartesian3|undefined}\n * @api\n */\nexports.pickCenterPoint = function(scene) {\n  const canvas = scene.canvas;\n  const center = new Cesium.Cartesian2(\n      canvas.clientWidth / 2,\n      canvas.clientHeight / 2);\n  return exports.pickOnTerrainOrEllipsoid(scene, center);\n};\n\n\n/**\n * Compute the signed tilt angle on globe, between the opposite of the\n * camera direction and the target normal. Return undefined if there is no\n * intersection of the camera direction with the globe.\n * @param {!Cesium.Scene} scene\n * @return {number|undefined}\n * @api\n */\nexports.computeSignedTiltAngleOnGlobe = function(scene) {\n  const camera = scene.camera;\n  const ray = new Cesium.Ray(camera.position, camera.direction);\n  let target = scene.globe.pick(ray, scene);\n\n  if (!target) {\n    // no tiles in the area were loaded?\n    const ellipsoid = Cesium.Ellipsoid.WGS84;\n    const obj = Cesium.IntersectionTests.rayEllipsoid(ray, ellipsoid);\n    if (obj) {\n      target = Cesium.Ray.getPoint(ray, obj.start);\n    }\n  }\n\n  if (!target) {\n    return undefined;\n  }\n\n  const normal = new Cesium.Cartesian3();\n  Cesium.Ellipsoid.WGS84.geocentricSurfaceNormal(target, normal);\n\n  const angleBetween = exports.signedAngleBetween;\n  const angle = angleBetween(camera.direction, normal, camera.right) - Math.PI;\n  return Cesium.Math.convertLongitudeRange(angle);\n};\n\n\n/**\n * Compute the ray from the camera to the bottom-center of the screen.\n * @param {!Cesium.Scene} scene\n * @return {!Cesium.Ray}\n */\nexports.bottomFovRay = function(scene) {\n  const camera = scene.camera;\n  const fovy2 = camera.frustum.fovy / 2;\n  const direction = camera.direction;\n  const rotation = Cesium.Quaternion.fromAxisAngle(camera.right, fovy2);\n  const matrix = Cesium.Matrix3.fromQuaternion(rotation);\n  const vector = new Cesium.Cartesian3();\n  Cesium.Matrix3.multiplyByVector(matrix, direction, vector);\n  return new Cesium.Ray(camera.position, vector);\n};\n\n\n/**\n * Compute the angle between two Cartesian3.\n * @param {!Cesium.Cartesian3} first\n * @param {!Cesium.Cartesian3} second\n * @param {!Cesium.Cartesian3} normal Normal to test orientation against.\n * @return {number}\n */\nexports.signedAngleBetween = function(first, second, normal) {\n  // We are using the dot for the angle.\n  // Then the cross and the dot for the sign.\n  const a = new Cesium.Cartesian3();\n  const b = new Cesium.Cartesian3();\n  const c = new Cesium.Cartesian3();\n  Cesium.Cartesian3.normalize(first, a);\n  Cesium.Cartesian3.normalize(second, b);\n  Cesium.Cartesian3.cross(a, b, c);\n\n  const cosine = Cesium.Cartesian3.dot(a, b);\n  const sine = Cesium.Cartesian3.magnitude(c);\n\n  // Sign of the vector product and the orientation normal\n  const sign = Cesium.Cartesian3.dot(normal, c);\n  const angle = Math.atan2(sine, cosine);\n  return sign >= 0 ? angle : -angle;\n};\n\n\n/**\n * Compute the rotation angle around a given point, needed to reach the\n * zenith position.\n * At a zenith position, the camera direction is going througth the earth\n * center and the frustrum bottom ray is going through the chosen pivot\n * point.\n * The bottom-center of the screen is a good candidate for the pivot point.\n * @param {!Cesium.Scene} scene\n * @param {!Cesium.Cartesian3} pivot Point around which the camera rotates.\n * @return {number}\n * @api\n */\nexports.computeAngleToZenith = function(scene, pivot) {\n  // This angle is the sum of the angles 'fy' and 'a', which are defined\n  // using the pivot point and its surface normal.\n  //        Zenith |    camera\n  //           \\   |   /\n  //            \\fy|  /\n  //             \\ |a/\n  //              \\|/pivot\n  const camera = scene.camera;\n  const fy = camera.frustum.fovy / 2;\n  const ray = exports.bottomFovRay(scene);\n  const direction = Cesium.Cartesian3.clone(ray.direction);\n  Cesium.Cartesian3.negate(direction, direction);\n\n  const normal = new Cesium.Cartesian3();\n  Cesium.Ellipsoid.WGS84.geocentricSurfaceNormal(pivot, normal);\n\n  const left = new Cesium.Cartesian3();\n  Cesium.Cartesian3.negate(camera.right, left);\n\n  const a = exports.signedAngleBetween(normal, direction, left);\n  return a + fy;\n};\n\n\n/**\n * Convert an OpenLayers extent to a Cesium rectangle.\n * @param {ol.Extent} extent Extent.\n * @param {ol.ProjectionLike} projection Extent projection.\n * @return {Cesium.Rectangle} The corresponding Cesium rectangle.\n * @api\n */\nexports.extentToRectangle = function(extent, projection) {\n  if (extent && projection) {\n    const ext = transformExtent(extent, projection, 'EPSG:4326');\n    return Cesium.Rectangle.fromDegrees(ext[0], ext[1], ext[2], ext[3]);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {!ol.Map} olMap\n * @param {!ol.source.Source} source\n * @param {!ol.View} viewProj\n * @param {!ol.layer.Base} olLayer\n * @return {!Cesium.ImageryProvider}\n */\nexports.sourceToImageryProvider = function(olMap, source, viewProj, olLayer) {\n  const skip = source.get('olcs_skip');\n  if (skip) {\n    return null;\n  }\n  let provider = null;\n  // Convert ImageWMS to TileWMS\n  if (source instanceof olSourceImageWMS && source.getUrl() &&\n    source.getImageLoadFunction() === defaultImageLoadFunction) {\n    const sourceProps = {\n      'olcs.proxy': source.get('olcs.proxy'),\n      'olcs.extent': source.get('olcs.extent'),\n      'olcs.projection': source.get('olcs.projection'),\n      'olcs.imagesource': source\n    };\n    source = new olSourceTileWMS({\n      url: source.getUrl(),\n      attributions: source.getAttributions(),\n      projection: source.getProjection(),\n      params: source.getParams()\n    });\n    source.setProperties(sourceProps);\n  }\n\n  if (source instanceof olSourceTileImage) {\n    let projection = olcsUtil.getSourceProjection(source);\n\n    if (!projection) {\n      // if not explicit, assume the same projection as view\n      projection = viewProj;\n    }\n\n    if (exports.isCesiumProjection(projection)) {\n      provider = new olcsCoreOLImageryProvider(olMap, source, viewProj);\n    }\n    // Projection not supported by Cesium\n    else {\n      return null;\n    }\n  } else if (source instanceof olSourceImageStatic) {\n    let projection = olcsUtil.getSourceProjection(source);\n    if (!projection) {\n      projection = viewProj;\n    }\n    if (exports.isCesiumProjection(projection)) {\n      provider = new Cesium.SingleTileImageryProvider({\n        url: source.getUrl(),\n        rectangle: new Cesium.Rectangle.fromDegrees(\n            source.getImageExtent()[0],\n            source.getImageExtent()[1],\n            source.getImageExtent()[2],\n            source.getImageExtent()[3]\n        )\n      });\n    }\n    // Projection not supported by Cesium\n    else {\n      return null;\n    }\n  } else if (source instanceof olSourceVectorTile) {\n    let projection = olcsUtil.getSourceProjection(source);\n\n    if (!projection) {\n      projection = viewProj;\n    }\n    if (skip === false) {\n      // MVT is experimental, it should be whitelisted to be synchronized\n      const fromCode = projection.getCode().split(':')[1];\n      const urls = source.urls.map(u => u.replace(fromCode, '3857'));\n      const extent = olLayer.getExtent();\n      const rectangle = exports.extentToRectangle(extent, projection);\n      const minimumLevel = source.get('olcs_minimumLevel');\n      const attributionsFunction = source.getAttributions();\n      const styleFunction = olLayer.getStyleFunction();\n      let credit;\n      if (extent && attributionsFunction) {\n        const center = getExtentCenter(extent);\n        credit = attributionsFunctionToCredits(attributionsFunction, 0, center, extent)[0];\n      }\n\n      provider = new MVTImageryProvider({\n        credit,\n        rectangle,\n        minimumLevel,\n        styleFunction,\n        urls\n      });\n      return provider;\n    }\n    return null; // FIXME: it is disabled by default right now\n  } else {\n    // sources other than TileImage|ImageStatic are currently not supported\n    return null;\n  }\n  return provider;\n};\n\n/**\n * Creates Cesium.ImageryLayer best corresponding to the given ol.layer.Layer.\n * Only supports raster layers and static images\n * @param {!ol.Map} olMap\n * @param {!ol.layer.Base} olLayer\n * @param {!ol.proj.Projection} viewProj Projection of the view.\n * @return {?Cesium.ImageryLayer} null if not possible (or supported)\n * @api\n */\nexports.tileLayerToImageryLayer = function(olMap, olLayer, viewProj) {\n\n  if (!(olLayer instanceof olLayerTile) && !(olLayer instanceof olLayerImage) &&\n    !(olLayer instanceof VectorTileLayer)) {\n    return null;\n  }\n\n  const source = olLayer.getSource();\n  if (!source) {\n    return null;\n  }\n  let provider = source.get('olcs_provider');\n  if (!provider) {\n    provider = this.sourceToImageryProvider(olMap, source, viewProj, olLayer);\n  }\n  if (!provider) {\n    return null;\n  }\n\n  const layerOptions = {};\n\n  const forcedExtent = /** @type {ol.Extent} */ (olLayer.get('olcs.extent'));\n  const ext = forcedExtent || olLayer.getExtent();\n  if (ext) {\n    layerOptions.rectangle = exports.extentToRectangle(ext, viewProj);\n  }\n\n  const cesiumLayer = new Cesium.ImageryLayer(provider, layerOptions);\n  return cesiumLayer;\n};\n\n\n/**\n * Synchronizes the layer rendering properties (opacity, visible)\n * to the given Cesium ImageryLayer.\n * @param {olcsx.LayerWithParents} olLayerWithParents\n * @param {!Cesium.ImageryLayer} csLayer\n * @api\n */\nexports.updateCesiumLayerProperties = function(olLayerWithParents, csLayer) {\n  let opacity = 1;\n  let visible = true;\n  [olLayerWithParents.layer].concat(olLayerWithParents.parents).forEach((olLayer) => {\n    const layerOpacity = olLayer.getOpacity();\n    if (layerOpacity !== undefined) {\n      opacity *= layerOpacity;\n    }\n    const layerVisible = olLayer.getVisible();\n    if (layerVisible !== undefined) {\n      visible &= layerVisible;\n    }\n  });\n  csLayer.alpha = opacity;\n  csLayer.show = visible;\n};\n\n\n/**\n * Convert a 2D or 3D OpenLayers coordinate to Cesium.\n * @param {ol.Coordinate} coordinate Ol3 coordinate.\n * @return {!Cesium.Cartesian3} Cesium cartesian coordinate\n * @api\n */\nexports.ol4326CoordinateToCesiumCartesian = function(coordinate) {\n  const coo = coordinate;\n  return coo.length > 2 ?\n    Cesium.Cartesian3.fromDegrees(coo[0], coo[1], coo[2]) :\n    Cesium.Cartesian3.fromDegrees(coo[0], coo[1]);\n};\n\n\n/**\n * Convert an array of 2D or 3D OpenLayers coordinates to Cesium.\n * @param {Array.<!ol.Coordinate>} coordinates Ol3 coordinates.\n * @return {!Array.<Cesium.Cartesian3>} Cesium cartesian coordinates\n * @api\n */\nexports.ol4326CoordinateArrayToCsCartesians = function(coordinates) {\n  console.assert(coordinates !== null);\n  const toCartesian = exports.ol4326CoordinateToCesiumCartesian;\n  const cartesians = [];\n  for (let i = 0; i < coordinates.length; ++i) {\n    cartesians.push(toCartesian(coordinates[i]));\n  }\n  return cartesians;\n};\n\n\n/**\n * Reproject an OpenLayers geometry to EPSG:4326 if needed.\n * The geometry will be cloned only when original projection is not EPSG:4326\n * and the properties will be shallow copied.\n * @param {!T} geometry\n * @param {!ol.ProjectionLike} projection\n * @return {!T}\n * @template T\n * @api\n */\nexports.olGeometryCloneTo4326 = function(geometry, projection) {\n  console.assert(projection);\n\n  const proj4326 = getProjection('EPSG:4326');\n  const proj = getProjection(projection);\n  if (proj.getCode() !== proj4326.getCode()) {\n    const properties = geometry.getProperties();\n    geometry = geometry.clone();\n    geometry.transform(proj, proj4326);\n    geometry.setProperties(properties);\n  }\n  return geometry;\n};\n\n\n/**\n * Convert an OpenLayers color to Cesium.\n * @param {ol.Color|CanvasGradient|CanvasPattern|string} olColor\n * @return {!Cesium.Color}\n * @api\n */\nexports.convertColorToCesium = function(olColor) {\n  olColor = olColor || 'black';\n  if (Array.isArray(olColor)) {\n    return new Cesium.Color(\n        Cesium.Color.byteToFloat(olColor[0]),\n        Cesium.Color.byteToFloat(olColor[1]),\n        Cesium.Color.byteToFloat(olColor[2]),\n        olColor[3]\n    );\n  } else if (typeof olColor == 'string') {\n    return Cesium.Color.fromCssColorString(olColor);\n  } else if (olColor instanceof CanvasPattern || olColor instanceof CanvasGradient) {\n    // Render the CanvasPattern/CanvasGradient into a canvas that will be sent to Cesium as material\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = canvas.height = 256;\n    ctx.fillStyle = olColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    return new Cesium.ImageMaterialProperty({\n      image: canvas\n    });\n  }\n  console.assert(false, 'impossible');\n};\n\n\n/**\n * Convert an OpenLayers url to Cesium.\n * @param {string} url\n * @return {!CesiumUrlDefinition}\n * @api\n */\nexports.convertUrlToCesium = function(url) {\n  let subdomains = '';\n  const re = /\\{(\\d|[a-z])-(\\d|[a-z])\\}/;\n  const match = re.exec(url);\n  if (match) {\n    url = url.replace(re, '{s}');\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      subdomains += String.fromCharCode(charCode);\n    }\n  }\n  return {\n    url,\n    subdomains\n  };\n};\n\n\n/**\n * Animate the return to a top-down view from the zenith.\n * The camera is rotated to orient to the North.\n * @param {!ol.Map} map\n * @param {!Cesium.Scene} scene\n * @return {Promise<undefined>}\n * @api\n */\nexports.resetToNorthZenith = function(map, scene) {\n  return new Promise((resolve, reject) => {\n    const camera = scene.camera;\n    const pivot = exports.pickBottomPoint(scene);\n    if (!pivot) {\n      reject('Could not get bottom pivot');\n      return;\n    }\n\n    const currentHeading = map.getView().getRotation();\n    if (currentHeading === undefined) {\n      reject('The view is not initialized');\n      return;\n    }\n    const angle = exports.computeAngleToZenith(scene, pivot);\n\n    // Point to North\n    exports.setHeadingUsingBottomCenter(scene, currentHeading, pivot);\n\n    // Go to zenith\n    const transform = Cesium.Matrix4.fromTranslation(pivot);\n    const axis = camera.right;\n    const options = {\n      callback: () => {\n        const view = map.getView();\n        exports.normalizeView(view);\n        resolve();\n      }\n    };\n    exports.rotateAroundAxis(camera, -angle, axis, transform, options);\n  });\n};\n\n\n/**\n * @param {!Cesium.Scene} scene\n * @param {number} angle in radian\n * @return {Promise<undefined>}\n * @api\n */\nexports.rotateAroundBottomCenter = function(scene, angle) {\n  return new Promise((resolve, reject) => {\n    const camera = scene.camera;\n    const pivot = exports.pickBottomPoint(scene);\n    if (!pivot) {\n      reject('could not get bottom pivot');\n      return;\n    }\n\n    const options = {callback: resolve};\n    const transform = Cesium.Matrix4.fromTranslation(pivot);\n    const axis = camera.right;\n    const rotateAroundAxis = exports.rotateAroundAxis;\n    rotateAroundAxis(camera, -angle, axis, transform, options);\n  });\n};\n\n\n/**\n * Set the OpenLayers view to a specific rotation and\n * the nearest resolution.\n * @param {ol.View} view\n * @param {number=} angle\n * @api\n */\nexports.normalizeView = function(view, angle = 0) {\n  const resolution = view.getResolution();\n  view.setRotation(angle);\n  if (view.constrainResolution) {\n    view.setResolution(view.constrainResolution(resolution));\n  } else {\n    view.setResolution(view.getConstrainedResolution(resolution));\n  }\n};\n\n/**\n * Check if the given projection is managed by Cesium (WGS84 or Mercator Spheric)\n *\n * @param {ol.proj.Projection} projection Projection to check.\n * @returns {boolean} Whether it's managed by Cesium.\n */\nexports.isCesiumProjection = function(projection) {\n  const is3857 = projection.getCode() === 'EPSG:3857';\n  const is4326 = projection.getCode() === 'EPSG:4326';\n  return is3857 || is4326;\n};\n\n\nexport function attributionsFunctionToCredits(attributionsFunction, zoom, center, extent) {\n  const frameState = {\n    viewState: {zoom, center},\n    extent,\n  };\n\n  if (!attributionsFunction) {\n    return [];\n  }\n  let attributions = attributionsFunction(frameState);\n  if (!Array.isArray(attributions)) {\n    attributions = [attributions];\n  }\n\n  return attributions.map(html => new Cesium.Credit(html, true));\n}\n\nexport default exports;\n\n\n/**\n * calculate the distance between camera and centerpoint based on the resolution and latitude value\n * @param {number} resolution Number of map units per pixel.\n * @param {number} latitude Latitude in radians.\n * @param {import('cesium').Scene} scene.\n * @param {import('ol/proj/Projection').default} projection View projection.\n * @return {number} The calculated distance.\n * @api\n */\nexport function calcDistanceForResolution(resolution, latitude, scene, projection) {\n  const canvas = scene.canvas;\n  const camera = scene.camera;\n  const fovy = camera.frustum.fovy; // vertical field of view\n  console.assert(!isNaN(fovy));\n  const metersPerUnit = projection.getMetersPerUnit();\n\n  // number of \"map units\" visible in 2D (vertically)\n  const visibleMapUnits = resolution * canvas.clientHeight;\n\n  // The metersPerUnit does not take latitude into account, but it should\n  // be lower with increasing latitude -- we have to compensate.\n  // In 3D it is not possible to maintain the resolution at more than one point,\n  // so it only makes sense to use the latitude of the \"target\" point.\n  const relativeCircumference = Math.cos(Math.abs(latitude));\n\n  // how many meters should be visible in 3D\n  const visibleMeters = visibleMapUnits * metersPerUnit * relativeCircumference;\n\n  // distance required to view the calculated length in meters\n  //\n  //  fovy/2\n  //    |\\\n  //  x | \\\n  //    |--\\\n  // visibleMeters/2\n  const requiredDistance = (visibleMeters / 2) / Math.tan(fovy / 2);\n\n  // NOTE: This calculation is not absolutely precise, because metersPerUnit\n  // is a great simplification. It does not take ellipsoid/terrain into account.\n\n  return requiredDistance;\n}\n\n/**\n * calculate the resolution based on a distance(camera to position) and latitude value\n * @param {number} distance\n * @param {number} latitude\n * @param {import('cesium').Scene} scene.\n * @param {import('ol/proj/Projection').default} projection View projection.\n * @return {number} The calculated resolution.\n * @api\n */\nexport function calcResolutionForDistance(distance, latitude, scene, projection) {\n  // See the reverse calculation (calcDistanceForResolution) for details\n  const canvas = scene.canvas;\n  const camera = scene.camera;\n  const fovy = camera.frustum.fovy; // vertical field of view\n  console.assert(!isNaN(fovy));\n  const metersPerUnit = projection.getMetersPerUnit();\n\n  const visibleMeters = 2 * distance * Math.tan(fovy / 2);\n  const relativeCircumference = Math.cos(Math.abs(latitude));\n  const visibleMapUnits = visibleMeters / metersPerUnit / relativeCircumference;\n  const resolution = visibleMapUnits / canvas.clientHeight;\n\n  return resolution;\n}\n"],"names":["messages","AssertionError","code","message","AssertionError$1","BaseEvent","type","BaseEvent$1","ObjectEventType","Disposable","Disposable$1","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","linearFindNearest","arr","target","direction","n","i","reverseSubArray","begin","end","tmp","extend","data","extension","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","called","lastResult","lastArgs","lastThis","nextArgs","arrayEquals","clear","object","property","isEmpty","Target","listener","listeners","listenersForType","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","pr","EventTarget","EventType","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","len","keys","unByKey","Observable$1","abstract","uidCounter_","getUid","obj","ObjectEvent","oldValue","BaseObject","values","value","eventType","silent","source","ol_Object","CollectionEventType","Property","CollectionEvent","element","Collection","array","options","f","elem","prev","except","Collection$1","assert","assertion","errorCode","Feature","geometryOrProperties","geometry","properties","clone","style","createStyleFunction","id","name","styles","Feature$1","ua","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","WORKER_OFFSCREEN_CANVAS","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","passive","tmp_","create","reset","transform","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","setFromArray","apply","coordinate","x","y","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","makeInverse","det","determinant","mat","transformStringDiv","toString","transformString","node","Relationship","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","minX","minY","maxX","maxY","createOrUpdate","buffer","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","wrapX","projection","projectionExtent","worldWidth","wrapAndSliceX","METERS_PER_UNIT","Projection","global","tileGrid","worldExtent","Projection$1","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","point","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","EPSG4326Projection","axisOrientation","cache","get","add","transforms","destination","sourceCode","destinationCode","clamp","min","max","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","l","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","round","floor","ceil","compareVersions","v1","v2","s1","s2","n1","n2","delta","coordinate1","coordinate2","rotate","cosAngle","sinAngle","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","distance","bearing","lon1","dByR","lat","lon","levels","level","warn","args","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getPointResolution","units","pointResolution","getter","metersPerUnit","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","fromUserResolution","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","createTransform","Geometry","revision","squaredTolerance","closestPoint","minSquaredDistance","coord","tolerance","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","olGeomGeometry","SimpleGeometry","simplifiedGeometry","layout","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","olGeomSimpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","linearRingArea","LinearRing$1","Point","Point$1","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","forEach","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","Polygon","polygon","linearRingsArea","flatCenter","Polygon$1","circular","sphereRadius","sphereOffset","fromExtent","RenderEventType","Fill","color","Fill$1","interpolatePoint","fraction","o","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","m1","lineStringsCoordinateAtM","interpolate","lineStringLength","LineString","lineString","LineString$1","Stroke","lineCap","lineDash","lineDashOffset","lineJoin","miterLimit","Stroke$1","ImageState","num","hasArea","ratio","toSize","ImageStyle","pixelRatio","displacement","opacity","rotateWithView","ImageStyle$1","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","el","rgb","fromString","cacheSize","s","fromStringInternal_","asArray","g","hasAlpha","normalize","asColorLike","createCanvasContext2D","canvasPool","settings","canvas","releaseCanvas","context","outerWidth","outerHeight","replaceNode","newNode","oldNode","parent","removeNode","removeChildren","replaceChildren","children","oldChildren","oldChild","newChild","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","match","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","measureFont","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","families","family","measureTextHeight","measureElement","metrics","measureText","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","lineHeight","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","w","h","executeLabelInstructions","label","contextInstructions","RegularShape","fill","image","renderOptions","stroke","strokeWidth","r1","r2","points","alpha","miterRatio","bevelAdd","aa","bb","dd","innerMiterRatio","innerLength","strokeStyle","maxRadius","radius2","startAngle","step","angle0","radiusC","RegularShape$1","CircleStyle","Circle$2","Style","defaultGeometryFunction","renderer","feature","zIndex","toFunction","styleFunction","defaultStyles","createDefaultStyle","Style$1","DEFAULT_FILL_COLOR","Text","overflow","maxAngle","offsetX","offsetY","placement","textAlign","justify","textBaseline","padding","Text$1","LayerProperty","BaseLayer","managed","state","states","background","maxResolution","minResolution","maxZoom","minZoom","visible","zindex","BaseLayer$1","Layer","baseOptions","pixel","frameState","layerRenderer","map","layerStatesArray","layerState","arrayLayerState","inView","viewState","zoom","olLayerLayer","quickselect","left","quickselectStep","defaultCompare","z","sd","newLeft","newRight","swap","RBush$2","maxEntries","bbox","result","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","path","indexes","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","splitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","IconImageCache","iconImage","src","crossOrigin","getKey","maxCacheSize","colorString","shared","ImageBase","ImageBase$1","ImageWrapper","imageLoadFunction","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","error","taintedTestContext","IconImage","imageState","ctx","iconImageCache","Icon","getIconImage","setScale","iconImageSize","widthScale","heightScale","Icon$1","toStyle","flatStyle","getFill","getStroke","getText","getImage","prefix","iconSrc","iconImg","shapePoints","circleRadius","Circle","BaseVectorLayer","RBush","renderOrder","styleLike","toStyleFunction","BaseVectorLayer$1","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasInstruction","VectorContext","hitDetectionRenderer","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","fillStyle","imageStyle","declutterImageWithText","textStyle","VectorContext$1","CanvasBuilder","maxExtent","dashArray","dash","tmpCoord","myEnd","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","skipped","lastRel","nextRel","builderEnds","builderEnd","builderBegin","builderEndss","myEnds","hitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","endGeometryInstruction","Builder","CanvasImageBuilder","myBegin","sharedData","origin","ImageBuilder","CanvasLineStringBuilder","moveToLineToInstruction","LineStringBuilder","CanvasPolygonBuilder","numEnds","circleInstruction","PolygonBuilder","matchingChunk","chunkStart","chunkEnd","chunkM","acos","m12","m23","x12","y12","x23","y23","TEXT_ALIGN","CanvasTextBuilder","instructions","fillState","strokeState","textState","geometryType","flatOffset","flatEnd","oo","range","geometryWidths","beg","keep","p0","p1","p2","p3","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","TextBuilder","BuilderGroup","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","CanvasBuilderGroup","LayerRenderer","layer","tiles","tile","tileRange","hitTolerance","matches","LayerRenderer$1","RenderEvent","inversePixelTransform","RenderEvent$1","pixelContext","createPixelContext","CanvasLayerRenderer","col","row","backgroundColor","layerClassName","container","topLeft","topRight","bottomRight","bottomLeft","inverted","CanvasLayerRenderer$1","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","reverse","flat","PI","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","previousFont","fillStrokeArgs","sheetWidth","sheetHeight","centerX","centerY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","featureCallback","hitExtent","declutterTree","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","coords","declutterMode","labelWithAnchor","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","Executor$1","ORDER","ExecutorGroup","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","pixelIndex","CanvasExecutorGroup","ViewHint","CanvasImmediateRenderer","userTransform","localTransform","close","geometries","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","CanvasImmediateRenderer$1","HIT_DETECT_RESOLUTION","createHitDetectionImageData","features","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","loading","renderFeatureInternal","renderGeometry","geometryRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","executorGroup","vectorSource","viewHints","multiWorld","endWorld","world","compositionContext","canvasTransform","transformToString","declutterExecutorGroup","clipped","render","layerExtent","intersectsExtent","resolve","executorGroups","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","getRenderTolerance","getSquaredRenderTolerance","ready","dirty","userExtent","replayGroupInstructions","CanvasVectorLayerRenderer$1","VectorLayer","Vector","RBush_","extents","uid","rbush","RBush$1","Source","adaptAttributions","self","reject","attributions","attributionLike","Source$1","VectorEventType","all","tileCoord","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","dataProjection","VectorSourceEvent","VectorSource","allStrategy","useSpatialIndex","collection","featureKey","valid","newFeatures","geometryFeatures","modifyingCollection","fast","featureId","removeAndIgnoreReturn","clearEvent","anExtent","filter","closestFeature","previousMinSquaredDistance","minDistance","sid","loadedExtentsRtree","extentsToLoad","extentToLoad","featureChangeKeys","removed","loader","VectorSource$1","toContext","scaleTransform","TileState","easeIn","easeOut","inAndOut","linear","time","Tile$2","Tile","ImageTile","tileLoadFunction","getBlankImage","ImageTile$1","Kinetic","decay","minVelocity","delay","lastIndex","firstIndex","duration","Kinetic$1","MapRenderer","coordinateToPixelTransform","pixelToCoordinateTransform","checkWrapped","layerFilter","thisArg2","forEachFeatureAtCoordinate","translatedCoordinate","offsets","layerStates","numLayers","order","expireIconCache","MapRenderer$1","CompositeMapRenderer","declutterLayers","previousElement","sourceState","CompositeMapRenderer$1","GroupEvent","LayerGroup","layers","layersArray","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","olLayerGroup","MapEvent","MapEvent$1","MapBrowserEvent","originalEvent","dragging","activePointers","MapBrowserEvent$1","MapBrowserEventType","PointerEventType","MapBrowserEventHandler","moveTolerance","pointerEvent","newEvent","pointerId","doc","MapBrowserEventHandler$1","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","elements","priorities","elementKey","priority","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","PriorityQueue$1","TileQueue","tilePriorityFunction","tileChangeCallback","added","tileKey","maxTotalLoading","maxNewLoads","newLoads","TileQueue$1","getTilePriority","tileSourceKey","tileCenter","tileResolution","ViewProperty","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","none","getViewportClampedResolution","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","DEFAULT_MIN_ZOOM","View","resolutionConstraintInfo","createResolutionConstraint","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","oldPadding","newPadding","newOptions","var_args","animationCount","animationCallback","series","animation","isNoopAnimation","now","more","seriesComplete","elapsed","progress","constrainedResolution","constrainedRotation","currentCenter","rotateCoordinate","addCoordinate","currentResolution","hints","enabled","logPower","reducedSize","calculateCenterOn","zoomFactor","nearest","baseLevel","geometryOrExtent","polygonFromExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","position","shiftedCenter","deltaCoordinates","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","targetCenter","targetResolution","targetZoom","targetRes","returnValue","centerNone","projExtent","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","constrainRotation","rotationNone","coordinatesEqual","View$1","Control","mapEvent","Control$1","Attribution","className","tipLabel","expandClassName","collapseLabel","collapseClassName","activeLabel","cssClasses","lookup","visibleAttributions","collapsible","attributionGetter","collapsed","Attribution$1","Rotate","compassClassName","button","view","Rotate$1","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","currentZoom","newZoom","Zoom$1","defaults","controls","InteractionProperty","Interaction","mapBrowserEvent","active","pan","zoomByDelta","Interaction$1","DoubleClickZoom","stopEvent","browserEvent","DoubleClickZoom$1","PointerInteraction","handledUp","handled","centroid","pointerEvents","clientX","clientY","PointerInteraction$1","conditions","pass","altKeyOnly","altShiftKeysOnly","focus","targetElement","activeElement","focusWithTabindex","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","DragPan","condition","targetPointers","centroidFromPointers","scaleCoordinate","centerpx","DragPan$1","DragRotate","DragRotate$1","RenderBox","startPixel","endPixel","px","RenderBox$1","DragBoxEventType","DragBoxEvent","DragBox","completeBox","DragBox$1","DragZoom","DragZoom$1","KeyCode","KeyboardPan","keyEvent","keyCode","mapUnitsDelta","KeyboardPan$1","KeyboardZoom","charCode","KeyboardZoom$1","MouseWheelZoom","wheelEvent","timeLeft","useAnchor","MouseWheelZoom$1","PinchRotate","pointerOptions","rotationDelta","touch0","touch1","PinchRotate$1","PinchZoom","scaleDelta","PinchZoom$1","interactions","kinetic","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","defaultControls","defaultInteractions","viewOptions","control","interaction","overlay","addLayersFrom","layerGroup","viewportPosition","scaleX","scaleY","eventPosition","group","viewCoordinate","rootNode","interactionsArray","tileQueue","lowOnFrameBudget","postRenderFunctions","keyboardEventTarget","previousFrameState","equalsExtent","oldLayerGroup","computedStyle","oldSize","overlays","Map$1","Overlay","panIntoViewOptions","mapRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","positioning","mapSize","posX","posY","Overlay$1","LRUCache","highWaterMark","entry","LRUCache$1","getKeyZXY","getCacheKeyForTileKey","fromKey","hash","withinExtentAndZ","TileCache","usedTiles","TileCache$1","TileRange","TileRange$1","VectorRenderTile","urlTileCoord","getSourceTiles","VectorRenderTile$1","VectorTile","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","transformInvCache","transformInv","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","leftBound","triangle","newTriangle","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","Triangulation$1","brokenDiagonalRendering_","drawTestTriangle","u1","u2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","calculateSourceResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","renderEdges","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","sourceRange","srcX","srcY","renderReprojected","leftToLoad","sourceListenKey","ReprojTile$1","TileEventType","tmpTileCoord","DECIMALS","TileGrid","restrictedTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","tileCoordZ","tileCoordX","tileCoordY","tileSize","opt_tileCoord","reverseIntersectionPolicy","createOrUpdateTileCoord","opt_direction","viewport","fullTileRanges","TileGrid$1","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","tileCache","covered","tileCoordKey","getTileGridForProjection","tilePixelRatio","scaleSize","tileCount","TileSourceEvent","TileSource$1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","expandUrl","urls","startCharCode","stopCharCode","stop","UrlTile","tileState","tileUrlFunction","UrlTile$1","TileImage","defaultTileLoadFunction","usedTileCache","thisProj","projKey","tileUrl","newTile","interimTile","tilegrid","proj","imageTile","olSourceTileImage","XYZ","XYZ$1","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","ReprojImage$1","ImageSourceEventType","ImageSourceEvent","ImageSource","defaultImageLoadFunction","appendParams","uri","params","keyParams","qs","Static","imageExtent","imageWidth","imageHeight","extentWidth","extentHeight","targetWidth","targetHeight","olSourceImageStatic","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","ImageWMS","projectionObj","sourceProjectionObj","baseParams","mpu","pixelSize","imageResolution","viewExtent","requestWidth","requestHeight","requestExtent","dpi","version","olSourceImageWMS","ATTRIBUTION","OSM","OSM$1","BaseImageLayer","BaseImageLayer$1","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","imageMapWidth","imageMapHeight","viewCenter","toTransformString","dw","dh","previousAlpha","CanvasImageLayerRenderer$1","ImageLayer","olLayerImage","TileProperty","BaseTileLayer","preload","useInterimTilesOnError","BaseTileLayer$1","CanvasTileLayerRenderer","tileLayer","tileOrigin","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","childTileRange","canvasScale","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","transition","contextSaved","clip","alphaChanged","postRenderFunction","tileCallback","wantedTiles","CanvasTileLayerRenderer$1","TileLayer","TileLayer$1","TileWMS","transparent","tileExtent","bufferSize","TileWMS$1","defaultLoadFunction","sourceTiles","sourceTile","tileFeatures","candidate","usedSourceTiles","cacheKey","bufferExtent","sourceZ","sourceTileCoord","sourceTileState","listenChange","sourceTileKey","coordKey","empty","origins","tileSizes","olSourceVectorTile","FeatureFormat","FeatureFormat$1","transformGeometryWithOptions","write","featureProjection","transformed","equivalentProjection","MultiLineString","lineStrings","multiLineString","midpoints","midpoint","MultiLineString$1","MultiPoint","multiPoint","MultiPoint$1","MultiPolygon","thisLayout","polygons","thisEndss","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","prevEnds","lastEnds","MultiPolygon$1","ieee754","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","pbf","Pbf","require$$0","buf","SHIFT_LEFT_32","SHIFT_RIGHT_32","TEXT_DECODER_MIN_LENGTH","utf8TextDecoder","readField","tag","startPos","readUInt32","readInt32","isSigned","readVarintRemainder","readUtf8TextDecoder","readUtf8","readPackedEnd","writeInt32","writeBigVarint","str","writeUtf8","makeRoomForExtraLength","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","toNum","writeBigVarintLow","writeBigVarintHigh","lsb","extraLen","b0","bytesPerSequence","b3","lead","circle","circleExtent","Circle$1","RenderFeature","RenderFeature$1","MVT","cmd","coordsLen","currentEnd","cmdLen","rawFeature","getGeometryType","geom","ctor","PBF","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","featurePBFReader","MVT$1","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","hifi","layerRevision","builderState","declutter","layerUid","tt","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","renderedTiles","declutterExecutorGroups","tilePixel","accumulator","hitDetectionImageData","worldOffset","renderMode","replayTypes","replayState","renderPixelRatio","renderScale","resetTransform","pixelScale","translateTransform","CanvasVectorTileLayerRenderer$1","VectorTileLayer","olLayerVectorTile","ol_ext_input_Base","tout","elt","cback","handle","v","ol_ext_input_Checkbox","ol_ext_input_Switch","ol_ext_input_Radio","ol_ext_element","attr","opt","html","useCapture","st","styleProp","defaultView","letter","oldLeft","oldRsLeft","rect","getOffset","fixed","gleft","gtop","getRect","speed","dt","onmove","page","scroll","moving","isbar","updateCounter","updateMinibar","scrollbar","updateMinibarDelay","pheight","scrollContainer","onPointerDown","onPointerMove","onPointerUp","animate","to","init","onMouseWheel","eventName","ol_matrix3D","ele","tr","mx","mx1","mx2","sum","tx","preTx","postTx","temp1","vert","out","s0","s3","s4","s5","c5","c4","c3","c0","ol_PerspectiveMap","ol_Map","divMap","opts","ol_events_condition_altKeyOnly","fromAngle","toAngle","ol_easing_inAndOut","t0","easing","fac","compute","txOrigin","fullTx","_updatePixelPosition","ol_Overlay","configBaseMap","baseMapList","itemKey","itemValue","mapSource","vector","exports","param","olcsListen","observable","stableSort","compareFnc","isGroundPolylinePrimitiveSupported","scene","olUseNewCoordinates","OLImageryProvider","olMap","opt_fallbackProj","proxy","olcsUtil","attributionsFunction","attributionsFunctionToCredits","z_","y_","tg","MVTImageryProvider","getTilegridForProjection","createTileUrlFunctions","promise","scaleFactor","request","vectorContext","camera","frustum","amount","translation","rawMatrix","quaternion","rotationMatrix","axis","opt_options","defaultValue","linearEasing","lastProgress","oldTransform","timeDifference","stepAngle","heading","bottomCenter","angleToZenith","zenith","rotateAroundAxis","ray","bottom","ellipsoid","normal","angleBetween","fovy2","matrix","second","cosine","sine","sign","pivot","fy","ext","viewProj","olLayer","skip","provider","sourceProps","olSourceTileWMS","olcsCoreOLImageryProvider","fromCode","u","rectangle","minimumLevel","credit","getExtentCenter","olLayerTile","layerOptions","olLayerWithParents","csLayer","layerOpacity","layerVisible","coo","toCartesian","cartesians","proj4326","olColor","subdomains","re","currentHeading","is3857","is4326","calcDistanceForResolution","latitude","fovy","visibleMapUnits","relativeCircumference","calcResolutionForDistance","visibleMeters"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212]}